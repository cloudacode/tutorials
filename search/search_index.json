{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Cloudacode","text":""},{"location":"#cloudacode-project","title":"Cloudacode Project \ud83d\ude80","text":"<p>Get started with step-by-step tutorials for <code>cloud, devops, kubernetes, and cncf technology</code>.</p>"},{"location":"#project-layout","title":"Project layout \ud83d\udcda","text":"<pre><code>cloud/\n    ...       # Cloud 101\ndevops(CICD)/\n    ...       # Continuous Integration / Deployment\ndevops(Terraform)/\n    ...       # Terraform\nkubernetes/\n    ...       # Kubernetes\ncncf/\n    ...       # Cncf project\netc/\n    ...       # Etc\n</code></pre>"},{"location":"#me","title":"Me \ud83e\uddd1\u200d\ud83d\ude80","text":"<p>A seasoned cloud and site reliability engineer with 12 years of experience in the web-scale tech industry.</p> <p>Areas of professional expertise:</p> <ul> <li>On and off-prem cloud environment engineering</li> <li>Deliver scalable and reliable infra with K8S</li> <li>Improve operation efficiency and modernize legacy environment</li> <li>Problem Solving / Strategic Thinking</li> <li>Cross-functional communications</li> <li>Project planning and management </li> </ul> <p>For full profile visit kyungcheol's Linkedin.</p>"},{"location":"cloud/aws/amazon-eks-setup/","title":"Setup an Amazon EKS, Deploy web application","text":"<p>EKS\ub85c \ud658\uacbd \uad6c\uc131 \ubc0f \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \uc2e4\uc2b5</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 Amazon EKS\ub85c \ub300\uaddc\ubaa8 \ucee8\ud14c\uc774\ub108 \uc6b4\uc601 \ud658\uacbd\uc744 \ub9cc\ub4e4\uace0 \uc11c\ube44\uc2a4(Container)\ub97c \ubc30\ud3ec \ubc30\ud3ec \ud574\ubcf4\ub294 \uc2e4\uc2b5 \uc785\ub2c8\ub2e4. AWS\uc5d0\uc11c \ucfe0\ubc84\ub124\ud2f1\uc2a4 \uc11c\ube44\uc2a4\uc778 EKS\uc5d0 \ub300\ud574 \ubc30\uc6cc \ubcf4\uace0 \ucee8\ud14c\uc774\ub108 \uc11c\ube44\uc2a4 \ubc30\ud3ec\ub97c \uc704\ud55c \uae30\ubcf8 \uc791\uc5c5\ub4e4\uc744 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"cloud/aws/amazon-eks-setup/#_1","title":"\uc0ac\uc804 \uc900\ube44 \uc0ac\ud56d","text":""},{"location":"cloud/aws/amazon-eks-setup/#aws-cli","title":"AWS CLI \uc124\uc815","text":"<p>AWS CLI \uc124\uce58: \uad00\ub828 \ub9c1\ud06c</p> <p>AWS CLI \ucd08\uae30 \uc124\uc815: \uad00\ub828 \ub9c1\ud06c</p> <p>Note</p> <p>\uc6d0\ud65c\ud55c \uc2e4\uc2b5\uc744 \uc704\ud574 IAM User \uad8c\ud55c\uc5d0 <code>AdministratorAccess</code> policy \ubd80\uc5ec</p>"},{"location":"cloud/aws/amazon-eks-setup/#architecture","title":"Architecture","text":"Star"},{"location":"cloud/aws/amazon-eks-setup/#1-eks","title":"1. EKS \uad6c\uc131 \ud558\uae30","text":""},{"location":"cloud/aws/amazon-eks-setup/#iam-user-for-eks","title":"IAM user for EKS","text":"<p>EKS\ub294 Root User\ub85c \uc0dd\uc131/\uc811\uc18d\ud558\ub294 \uac83\uc744 \ubcf4\uc548\uc0c1 \uad8c\uace0\ud558\uc9c0 \uc54a\uc73c\uba70 EKS\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uad8c\ud55c(Kubernetes RBAC authorization)\uc744 EKS\ub97c \uc0dd\uc131\ud55c IAM \uc5d4\ud130\ud2f0(user \ud639\uc740 role)\ub85c \ubd80\ud130 \ud560\ub2f9\uc744 \uc2dc\ud0a4\uae30 \ub54c\ubb38\uc5d0 IAM user \ud639\uc740 role\ub97c \uc0ac\uc6a9\uc911\uc774\uc9c0 \uc54a\ub2e4\uba74 \ud544\uc218\ub85c IAM \uc5d4\ud130\ud2f0\ub97c \uc0dd\uc131\ud558\uace0 EKS \uc0dd\uc131 \uc5ed\ud560\uc744 \ubd80\uc5ec \ud574\uc57c\ud55c\ub2e4. </p> <p>https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html</p> <p>\uc0ac\uc6a9\uc911\uc778 IAM \uc5d4\ud130\ud2f0(\uc720\uc800, Role)\uac00 \uc788\ub2e4\uba74 eksctl \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \uac80\ud1a0. \uc6d0\ud65c\ud55c \uc2e4\uc2b5\uc744 \uc704\ud574 AdministratorAccess policy \ubd80\uc5ec</p> <p>Otherwise, create a IAM user with eksctl minimum policies. https://eksctl.io/usage/minimum-iam-policies/</p> <p>\ud604\uc7ac \uc138\uc158\uc758 IAM \uc5d4\ud130\ud2f0 \ud655\uc778 \ubc29\ubc95</p> <pre><code>$ aws sts get-caller-identity\n</code></pre>"},{"location":"cloud/aws/amazon-eks-setup/#install-eksctl-and-kubectl","title":"Install eksctl and kubectl","text":"<p>EKS \uc0dd\uc131\uc744 \uc704\ud574 eksctl\uc744 \uc124\uce58 \ud558\uace0 \ucd94\ud6c4 kubernetes \uad00\ub9ac\ub97c \uc704\ud574 kubectl\ub3c4 \uc0ac\uc804\uc5d0 \uc124\uce58 \ud544\uc694: kubectl \uc124\uce58(1.18)</p> <p>eksctl \uc124\uce58</p>"},{"location":"cloud/aws/amazon-eks-setup/#deploy-eks-cluster","title":"Deploy EKS Cluster","text":"<p>EKS \ubc30\ud3ec\ub97c \uc704\ud55c \uad6c\uc131 \uc815\ubcf4 \ud30c\uc77c (eks-cluster-config.yml) \uc791\uc131</p> <p>*\uc2e4\uc2b5 \ube44\uc6a9 \uc808\uac10\uc744 \uc704\ud574 SPOT \uc778\uc2a4\ud134\uc2a4 \uc0ac\uc6a9</p> <pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: cloud-eks-cluster\n  region: ap-northeast-2\n\navailabilityZones: [\"ap-northeast-2a\", \"ap-northeast-2c\"]\n\niam:\n  withOIDC: true\n\nmanagedNodeGroups:\n- name: cloud-eks-workers\n  desiredCapacity: 1\n  iam:\n    withAddonPolicies:\n      albIngress: true\n  instanceTypes: [\"c4.large\",\"c5.large\"]\n  spot: true\n#  instanceType: t3.small\n#  ssh:\n#    publicKeyName: \"&lt;your key pair name&gt;\"\n#    https://ap-northeast-2.console.aws.amazon.com/ec2/v2/home?region=ap-northeast-2#KeyPairs:\n\ncloudWatch:\n    clusterLogging:\n        enableTypes: [\"audit\", \"authenticator\", \"controllerManager\"]\n</code></pre> <p>\uc815\uc758\ud55c \uad6c\uc131 \uc815\ubcf4 \ub300\ub85c cluster \uc0dd\uc131</p> <pre><code>$ eksctl create cluster -f ./eks-cluster-config.yml\n</code></pre> <p>EKS Cluster \uad6c\uc131 \uc644\ub8cc \uae4c\uc9c0 \uc57d 15\ubd84 \uc18c\uc694</p> <p>\uc635\uc158)\ub9cc\uc57d CLI\ub85c \ud558\uace0 \uc2f6\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc218\ud589</p> <pre><code>eksctl create cluster \\\n--name cloud-eks-01 \\\n--version 1.18 \\\n--region ap-northeast-2 \\\n--zones=ap-northeast-2a,ap-northeast-2c \\\n--nodegroup-name cloud-eks-workers \\\n--nodes 1 \\\n--nodes-min 1 \\\n--nodes-max 3 \\\n--with-oidc \\\n--managed \\\n--alb-ingress-access \\\n--spot \\\n--instance-types=c4.large,c5.large\n</code></pre>"},{"location":"cloud/aws/amazon-eks-setup/#eks-cluster","title":"EKS Cluster \uc811\uc18d \ud655\uc778","text":"<p>\uc815\uc0c1\uc801\uc778 output</p> <pre><code>[\u2714]  all EKS cluster resources for \"cloud-eks-01\" have been created\n[\u2139]  nodegroup \"cloud-eks-workers\" has 1 node(s)\n[\u2139]  node \"ip-192-168-27-236.ap-northeast-2.compute.internal\" is ready\n[\u2139]  waiting for at least 1 node(s) to become ready in \"cloud-eks-workers\"\n[\u2139]  nodegroup \"cloud-eks-workers\" has 1 node(s)\n[\u2139]  node \"ip-192-168-27-236.ap-northeast-2.compute.internal\" is ready\n[\u2139]  kubectl command should work with \"/Users/kcchang/.kube/config\", try 'kubectl get nodes'\n[\u2714]  EKS cluster \"cloud-eks-01\" in \"ap-northeast-2\" region is ready\n</code></pre> <p>kubectl\uc744 \ud1b5\ud574 \ucd94\uac00\ub41c node \ud655\uc778</p> <pre><code>\u279c  \u2717 kubectl get nodes\nNAME                                                STATUS   ROLES    AGE   VERSION\nip-192-168-27-236.ap-northeast-2.compute.internal   Ready    &lt;none&gt;   19m   v1.18.9-eks-d1db3c\n</code></pre>"},{"location":"cloud/aws/amazon-eks-setup/#2-application","title":"2. Application \ubc30\ud3ec","text":""},{"location":"cloud/aws/amazon-eks-setup/#database","title":"Database \ubc30\ud3ec","text":"<p>\uc608\uc81c todo \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ub85c\uceec sqlight DB \ub300\uc2e0\uc5d0 \uc678\ubd80 RDBMS(mariadb, mysql\ub4f1) \ub9ac\uc18c\uc2a4\ub97c \uc5f0\ub3d9 \ud55c \uacbd\uc6b0\uc5d0\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc704\uc5d0 DB app\uc744 \ubc30\ud3ec \ud574\uc57c\ud558\ubbc0\ub85c \uad00\ub828\ud574 Deployment manifast \ud30c\uc77c \uc791\uc131</p> <p>Deployment \ud30c\uc77c \uad6c\uc131 \ud558\uae30 kuberentes deployment</p> <p>mysql-deployment.yaml</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n      - image: cloudacode/mariadb-todo:v1.0.1\n        name: mysql\n        ports:\n        - containerPort: 3306\n          name: mysql\n</code></pre> <p>Deploy the contents of the deployment file:</p> <pre><code>kubectl apply -f mysql-deployment.yaml\n</code></pre> <p>Display information about the Deployment:</p> <pre><code>kubectl describe deployment mysql\n</code></pre> <p>\uc815\uc0c1\uc801\uc73c\ub85c mysql\uc774 Deploy\uac00 \ub418\uc5c8\ub2e4\uba74 flask app\uc5d0\uc11c mysql\ub85c \uc811\uc18d\uc744 \uc704\ud574 service\ub97c deployment\uc5d0 \ub9e4\ud551</p> <p>mysql-service.yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\nspec:\n  ports:\n  - port: 3306\n  selector:\n    app: mysql\n  clusterIP: None\n</code></pre> <p>Deploy the contents of the service file:</p> <pre><code>kubectl apply -f mysql-service.yaml\n</code></pre> <p>\ubc30\ud3ec\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc644\ub8cc\uac00 \ub418\uba74 Pod \uc815\ubcf4\ub97c \ucc3e\uc744\uc218 \uc788\ub2e4</p> <pre><code>kubectl get pods -l app=mysql\n</code></pre> <p>Output</p> <pre><code>NAME                     READY   STATUS    RESTARTS   AGE\nmysql-6fd94cc949-d8lj7   1/1     Running   0          23s\n</code></pre>"},{"location":"cloud/aws/amazon-eks-setup/#flask-app","title":"Flask APP \ubc30\ud3ec","text":"<p>\ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 Flask app\uc744 \ubc30\ud3ec\ud558\uae30 \uc704\ud574 Deployment manifast \ud30c\uc77c \uc791\uc131</p> <p>flask-deployment.yaml</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cloud-flask\n  labels:\n    app: cloud-flask\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cloud-flask\n  strategy:\n    rollingUpdate:\n      maxSurge: 20%\n      maxUnavailable: 20%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: cloud-flask\n    spec:\n      containers:\n      - image: cloudacode/python-todo:v1.1.0\n        imagePullPolicy: Always\n        name: cloud-flask\n        ports:\n        - containerPort: 5000\n          protocol: TCP\n        env:\n        - name: DB_USER\n          value: root\n        - name: DB_PASSWORD\n          value: mysecret\n        - name: DB_NAME\n          value: todo\n        - name: DB_HOST\n          value: mysql\n</code></pre> <p>Deploy the contents of the deployment file:</p> <pre><code>kubectl apply -f flask-deployment.yaml\n</code></pre> <p>Display information about the Deployment:</p> <pre><code>kubectl describe deployment cloud-flask\n</code></pre> <p>\uc815\uc0c1\uc801\uc73c\ub85c Flask app\uc774 \ubc30\ud3ec \ub418\uc5c8\ub2e4\uba74 \uc678\ubd80\uc5d0\uc11c flask app\uc73c\ub85c \uc811\uc18d\uc744 \uc704\ud574 service\ub97c deployment\uc5d0 \ub9e4\ud551</p> <p>flask-service.yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: cloud-flask-svc\nspec:\n  selector:\n    app: cloud-flask\n  ports:\n   -  protocol: TCP\n      port: 80\n      targetPort: 5000\n  type: LoadBalancer\n</code></pre> <p>Deploy the contents of the service file:</p> <pre><code>kubectl apply -f flask-service.yaml\n</code></pre> <p>\ubc30\ud3ec\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc644\ub8cc\uac00 \ub418\uba74 Pod \uc815\ubcf4\ub97c \ucc3e\uc744\uc218 \uc788\ub2e4</p> <pre><code>kubectl get pods -l app=cloud-flask\n</code></pre> <p>flask app\uc758 \uacbd\uc6b0\ub294 Service \ud0c0\uc785\uc744 LB\ub85c \uc678\ubd80 \ub178\ucd9c\uc744 \uc2dc\ucf30\uc73c\ubbc0\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 LB Endpoint\ub97c \ud655\uc778 \uac00\ub2a5</p> <pre><code>kubectl get svc cloud-flask-svc\n</code></pre> <p>Output</p> <pre><code>NAME              TYPE           CLUSTER-IP       EXTERNAL-IP                                                                   PORT(S)        AGE\ncloud-flask-svc   LoadBalancer   10.100.211.215   acd2f9103b9564eb3ada544282a1dee3-566651492.ap-northeast-2.elb.amazonaws.com   80:31126/TCP   101s \n</code></pre> <p>\ud574\ub2f9 LB endpoint\ub85c \uc811\uadfc \ud558\uc5ec \ud655\uc778 \ub3d9\uc791 \ud655\uc778 </p>"},{"location":"cloud/aws/amazon-eks-setup/#clean-up","title":"Clean Up","text":"<p>\uc2e4\uc2b5 \uc644\ub8cc \ud6c4 \ube44\uc6a9 \uc808\uc57d\uc744 \uc704\ud574 \uc2e4\uc2b5\ud55c EKS \ub9ac\uc18c\uc2a4\ub97c \uc815\ub9ac</p> <pre><code>eksctl delete cluster --region=ap-northeast-2 --name=&lt;your eks cluster name&gt;\n</code></pre>"},{"location":"cloud/aws/amazon-eks-setup/#trobleshooting-eks","title":"Trobleshooting - EKS","text":"<p>https://aws.amazon.com/premiumsupport/knowledge-center/amazon-eks-cluster-access/</p> <p>https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/troubleshooting.html#unauthorized</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/apache-tomcat-redis/","title":"Build a 3tier Web App on AWS","text":"<p>The basic unit of a 3 tier web application which is Apache + Tomcat + Redis + DB and we will use Redis for tomcat session clustering.</p> <p>WEB(Apache), WAS(Tomcat) + Session Clustering(Redis), DB \uad6c\uc131\uc744 \ud1b5\ud574 \uae30\ubcf8\uc801\uc778 \uc6f9\uc11c\ube44\uc2a4\uc758 3 Tier \uad6c\uc131\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf8\ub2e4. </p> <p>This tutorial uses the AWS and highly recommend using AWS for setting up the infrastructure to test 3 tier web app.</p> <p>Time to Complete: 2-3 hours</p> <p>Cost to Complete: Many of the services used are included in the AWS Free Tier. For those that are not, the sample application will cost, in total, less than $2/day.</p> <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul> <p>Please be sure to terminate all of the resources created during this workshop to ensure that you are no longer charged.</p>"},{"location":"cloud/aws/apache-tomcat-redis/#system-architecture","title":"System Architecture","text":"Star"},{"location":"cloud/aws/apache-tomcat-redis/#1-create-a-web-server","title":"1. Create a Web Server","text":""},{"location":"cloud/aws/apache-tomcat-redis/#create-ec2-instances","title":"Create EC2 instances","text":"<p>First, create <code>Ubuntu 18.04</code> EC2 instance(s) for Web Server(s), with public IP and allow 80 for any.  </p>"},{"location":"cloud/aws/apache-tomcat-redis/#install-apache-on-ubuntu-1804","title":"Install Apache on Ubuntu 18.04","text":"<p>Install via apt package</p> <pre><code>$ sudo apt update\n$ sudo apt install apache2\n</code></pre>"},{"location":"cloud/aws/apache-tomcat-redis/#2-create-a-was-server","title":"2. Create a WAS Server","text":""},{"location":"cloud/aws/apache-tomcat-redis/#create-ec2-instances_1","title":"Create EC2 instances","text":"<p>First, create <code>Ubuntu 18.04</code> EC2 instance(s) for Was Server(s), with public IP, allow 8080 for any, and allow 8009 for WEB server SG group.  </p>"},{"location":"cloud/aws/apache-tomcat-redis/#set-up-a-tomcat-user","title":"Set up a Tomcat User","text":"<p>Note</p> <p>Tomcat should be run as an unprivileged user (i.e. not root)</p> <pre><code>$ sudo groupadd tomcat\n$ sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat\n</code></pre>"},{"location":"cloud/aws/apache-tomcat-redis/#install-tomcat-via-source-package","title":"Install Tomcat via Source package","text":"<p>First, Tomcat needs JDK</p> <pre><code>$ sudo apt update\n$ sudo apt install default-jdk -y\n$ sudo update-java-alternatives -l\n</code></pre> <p>Download Tomcat Source package Download</p> <pre><code>$ curl -O https://ftpmirror1.infania.net/mirror/apache/tomcat/tomcat-9/v9.0.41/bin/apache-tomcat-9.0.41.tar.gz\n</code></pre> <p>Execute the following command to create tomcat directory and extract source pakcage</p> <pre><code>$ sudo mkdir /opt/tomcat\n$ sudo tar xzvf apache-tomcat-*tar.gz -C /opt/tomcat --strip-components=1\n</code></pre> <p>Set up the permission for tomcat user/group</p> <pre><code>cd /opt/tomcat\nsudo chgrp -R tomcat /opt/tomcat\nsudo chmod -R g+r conf\nsudo chmod g+x conf\nsudo chown -R tomcat webapps/ work/ temp/ logs/\n</code></pre> <p>Now, configure the systemd service file <code>/etc/systemd/system/tomcat.service</code></p> <pre><code>[Unit]\nDescription=Apache Tomcat Web Application Container\nAfter=network.target\n\n[Service]\nType=forking\n\nEnvironment=JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64\nEnvironment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid\nEnvironment=CATALINA_HOME=/opt/tomcat\nEnvironment=CATALINA_BASE=/opt/tomcat\nEnvironment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'\nEnvironment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'\n\nExecStart=/opt/tomcat/bin/startup.sh\nExecStop=/opt/tomcat/bin/shutdown.sh\n\nUser=tomcat\nGroup=tomcat\nUMask=0007\nRestartSec=10\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Start tomcat service</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl start tomcat\nsudo systemctl status tomcat\n</code></pre> <p>Open your browser to check tomcat server http://was_server_IP:8080</p> <p>Congratulations, you have installed the basic tomcat server</p>"},{"location":"cloud/aws/apache-tomcat-redis/#create-sample-webapp-in-tomcat","title":"Create sample Webapp in Tomcat","text":"<pre><code>$ cd /opt/tomcat\n$ sudo mkdir -p webapps/demo\n</code></pre> <p><code>index.jsp</code></p> <pre><code>&lt;html&gt;\n  &lt;body&gt;\n    TOMCAT DEMO\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Restart tomcat service</p> <pre><code>$ sudo systemctl restart tomcat.service\n</code></pre> <p>http://WAS_SERVER_IP:8080/demo</p> <p>Now, you have a new demo webapp</p>"},{"location":"cloud/aws/apache-tomcat-redis/#3-integrate-apache-and-tomcat-via-ajp-protocol","title":"3. Integrate apache and tomcat via AJP protocol","text":"<p>Note</p> <p>Tomcat AJP protocol connector https://tomcat.apache.org/tomcat-7.0-doc/config/ajp.html</p>"},{"location":"cloud/aws/apache-tomcat-redis/#enable-ajp-in-tomcat-server","title":"Enable AJP in Tomcat server","text":"<p>In order to make connection between apache and tomcat, enable AJP connector in <code>/opt/tomcat/conf/server.xml</code></p> <pre><code>    &lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt;\n    &lt;Connector protocol=\"AJP/1.3\"\n               address=\"0.0.0.0\"\n               secretRequired=\"false\"\n               port=\"8009\"\n               redirectPort=\"8443\" /&gt;\n\n    &lt;Engine name=\"Catalina\" defaultHost=\"localhost\" jvmRoute=\"ajp13_worker01\"&gt;\n</code></pre> <p>Please keep in mind, the jvmRoute value stands for worker name and each WAS has a unique name.</p> <p>Restart tomcat service</p> <pre><code>$ sudo systemctl restart tomcat.service\n</code></pre>"},{"location":"cloud/aws/apache-tomcat-redis/#setup-mod_jk-module-in-apache-server","title":"Setup mod_jk module in Apache server","text":"<p>Install mod_jk library</p> <pre><code>$ cd /etc/apache2\n$ sudo apt-get install libapache2-mod-jk\n$ sudo ln -s  /etc/libapache2-mod-jk/workers.properties\n</code></pre> <p>Configure worker infomation as WAS server in <code>workers.properties</code></p> <p>Single WAS server,</p> <pre><code>workers.tomcat_home=/usr/share/tomcat8\nworkers.java_home=/usr/lib/jvm/default-java\nps=/\n\nworker.list=ajp13_worker_lb\n\nworker.ajp13_worker01.port=8009\nworker.ajp13_worker01.host=`WAS Server IP`\nworker.ajp13_worker01.type=ajp13\nworker.ajp13_worker01.lbfactor=100\n\nworker.ajp13_worker_lb.type=lb\nworker.ajp13_worker_lb.balance_workers=ajp13_worker01\n</code></pre> <p>Multiple WAS servers,</p> <pre><code>workers.tomcat_home=/usr/share/tomcat8\nworkers.java_home=/usr/lib/jvm/default-java\nps=/\n\nworker.list=ajp13_worker_lb\n\nworker.ajp13_worker01.port=8009\nworker.ajp13_worker01.host=`WAS Server01 IP`\nworker.ajp13_worker01.type=ajp13\nworker.ajp13_worker01.lbfactor=50\n\nworker.ajp13_worker02.port=8009\nworker.ajp13_worker02.host=`WAS Server02 IP`\nworker.ajp13_worker02.type=ajp13\nworker.ajp13_worker02.lbfactor=50\n\nworker.ajp13_worker_lb.type=lb\nworker.ajp13_worker_lb.balance_workers=ajp13_worker01,ajp13_worker02\n</code></pre> <p>Note</p> <p>Loadbalancing https://tomcat.apache.org/connectors-doc/common_howto/loadbalancers.html</p> <p>In order to forward traffic to tomcat, add JkMount configuration in site default file(<code>/etc/apache2/sites-enabled/000-default.conf</code>)</p> <pre><code>&lt;VirtualHost *:80&gt;\n        ServerAdmin localhost\n        DocumentRoot /var/www/html\n        JkMount /*.jsp ajp13_worker_lb\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;\n</code></pre> <p>Restart Apache service</p> <pre><code>$ sudo systemctl restart apache.service\n</code></pre> <p>Now, the Apache forwards JSP request to Tomcat and response</p> <p>http://WEB_SERVER_IP:8080/demo/index.jsp</p> <p>Congratulations, you have integrated WEB, WAS tier</p>"},{"location":"cloud/aws/apache-tomcat-redis/#4-tomcat-session-clustering-with-redis","title":"4. Tomcat Session Clustering with Redis","text":"<p>We have several options to set up the session clustering, and this tutorial is going to use Redisson-tomcat library which is the most active library for Redis session clustering.</p>"},{"location":"cloud/aws/apache-tomcat-redis/#create-the-elasticache-cluster","title":"Create the ElastiCache cluster","text":"<p>First, create Redis via ElastiCache cluster, and allow 6379 for WAS server SG group. </p>"},{"location":"cloud/aws/apache-tomcat-redis/#setup-the-redisson-library","title":"Setup the Redisson library","text":"<p>Download <code>redisson-all</code>, <code>redisson-tomcat</code> library in tomcat lib directory</p> <pre><code>$ sudo curl -O https://repository.sonatype.org/service/local/repositories/central-proxy/content/org/redisson/redisson-all/3.15.0/redisson-all-3.15.0.jar\n\n$ sudo curl -O https://repository.sonatype.org/service/local/repositories/central-proxy/content/org/redisson/redisson\n-tomcat-9/3.15.0/redisson-tomcat-9-3.15.0.jar\n\n$ sudo mv redisson* /opt/tomcat/lib/\n</code></pre> <p>Add the redisson class in <code>conf/context.xml</code> </p> <pre><code>&lt;Manager className=\"org.redisson.tomcat.RedissonSessionManager\"\n  configPath=\"${catalina.base}/conf/redisson.conf\"\n  readMode=\"REDIS\" updateMode=\"DEFAULT\" broadcastSessionEvents=\"false\"\n  keyPrefix=\"\"/&gt;\n</code></pre> <p>Setup the <code>conf/redisson.conf</code> </p> <pre><code>{\n\"singleServerConfig\":{\n  \"address\": \"redis://`ElastiCache_Cluster`:6379\"\n},\n\"threads\":0,\n\"nettyThreads\":0,\n\"transportMode\":\"NIO\"\n}\n</code></pre> <p>Restart tomcat service</p> <pre><code>$ sudo systemctl restart tomcat.service\n</code></pre> <p>Now, you can check session information in Redis</p> <p>If you don't have <code>redis-client</code>, install redis-tools apt package</p> <pre><code>apt-get install redis-tools\n</code></pre> <p>Access redis cluster and check keys which are the session ID.</p> <pre><code>$ redis-cli -h session01.mvqc4c.0001.apn2.cache.amazonaws.com\n\nsession01.mvqc4c.0001.apn2.cache.amazonaws.com:6379&gt; KEYS *\n1) \"redisson:tomcat_session:959CB3E05C307CB9ECCEB4534E84CFE8.ajp13_worker01\"\n2) \"redisson:tomcat_session:7616482947EC5AC55A6ACDFF5F4BEC01.ajp13_worker02\"\n</code></pre> <p>Add following JSP file to check via browser</p> <p><code>webapps/demo/session.jsp</code></p> <pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;table border=\"1\"&gt;\n      &lt;tr&gt;\n        &lt;td&gt;Session ID&lt;/td&gt;\n        &lt;td&gt;&lt;%=session.getId()%&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;Server IP&lt;/td&gt;\n        &lt;td&gt;&lt;%=request.getLocalAddr()%&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;div&gt;Server Name: &lt;b&gt;&lt;%=request.getLocalName()%&gt;&lt;/b&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Restart apache2 service</p> <pre><code>$ sudo systemctl restart apache2\n</code></pre> <p>http://WEB_SERVER_IP/demo/session.jsp</p> <p>Please stop one of the tomcat servers and check the session is still in place Congratulations, you have integrated Session Clustering</p>"},{"location":"cloud/aws/apache-tomcat-redis/#5-implement-database","title":"5. Implement Database","text":""},{"location":"cloud/aws/apache-tomcat-redis/#deploy-a-rds","title":"Deploy a RDS","text":"<p>First, create Mysql via RDS, and allow 3306 for WAS server SG group. </p>"},{"location":"cloud/aws/apache-tomcat-redis/#create-a-dummy-database","title":"Create a dummy database","text":"<p>Access RDS and create a Dummy database</p> <pre><code>create database javatest;\nuse javatest;\ncreate table testdata (id int not null auto_increment primary key, foo varchar(25), bar int);\n</code></pre> <pre><code>insert into testdata values(null, 'hello', 12345);\nselect * from testdata;\n</code></pre>"},{"location":"cloud/aws/apache-tomcat-redis/#setup-mysql-connector-for-tomcat","title":"Setup mysql connector for Tomcat","text":"<p>In order to connect mysql, add mysql connector in the WAS(Tomcat) server(s) </p> <pre><code>$ cd tmp/\n\n$ curl -O https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-8.0.23.zip\n\n$sudo mv /tmp/mysql-connector-java-8.0.23/mysql-connector-java-8.0.23.jar /opt/tomcat/lib/\n</code></pre> <p>Update conf/context.xml</p> <pre><code>&lt;Resource name=\"jdbc/TestDB\" auth=\"Container\" type=\"javax.sql.DataSource\" maxActive=\"100\" maxIdle=\"30\" maxWait=\"10000\" username=\"DB_USERNAME\" password=\"DB_PASSWORD\" driverClassName=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://RDS_ENDPOINT:3306/javatest\"/&gt;\n</code></pre> <p>Please change the <code>DB_USERNAME</code>, <code>DB_PASSWORD</code>, and <code>RDS_ENDPOINT</code></p> <p>Add following JSP file in the <code>webapps/demo/testdb.jsp</code> to check via browser</p> <pre><code>&lt;%@page import=\"java.sql.DriverManager\"%&gt; \n&lt;%@page import=\"java.sql.ResultSet\"%&gt;\n&lt;%@page import=\"java.sql.Statement\"%&gt;\n&lt;%@page import=\"java.sql.Connection\"%&gt; \n&lt;%\nString id = request.getParameter(\"userid\"); String driver =\n\"com.mysql.jdbc.Driver\"; String connectionUrl =\n\"jdbc:mysql://RDS_ENDPOINT:3306/\";\nString database = \"javatest\"; String userid = \"DB_USERNAME\"; String password =\n\"DB_PASSWORD\"; try { Class.forName(driver); } catch (ClassNotFoundException e) {\ne.printStackTrace(); } Connection connection = null; Statement statement = null;\nResultSet resultSet = null; %&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;table border=\"1\"&gt;\n      &lt;tr&gt;\n        &lt;td&gt;session id&lt;/td&gt;\n        &lt;td&gt;&lt;%=session.getId()%&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;foo&lt;/td&gt;\n        &lt;td&gt;bar&lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;% try{ connection = DriverManager.getConnection(connectionUrl+database,\n      userid, password); statement=connection.createStatement(); String sql\n      =\"select id, foo, bar from testdata\"; resultSet =\n      statement.executeQuery(sql); while(resultSet.next()){ %&gt;\n      &lt;tr&gt;\n        &lt;td&gt;&lt;%=resultSet.getString(\"foo\") %&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;%=resultSet.getString(\"bar\") %&gt;&lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;% } connection.close(); } catch (Exception e) { e.printStackTrace(); } %&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Restart apache2 service</p> <pre><code>$ sudo systemctl restart tomcat.service\n</code></pre> <p>Now, this testdb.jsp will return the DB result which is in the RDS</p> <p>http://WEB_SERVER_IP/demo/testdb.jsp</p> <p></p> <p>Congratulations, you have completed WEB, WAS, DB tutorial</p>"},{"location":"cloud/aws/apache-tomcat-redis/#reference","title":"Reference","text":"<ul> <li>https://www.digitalocean.com/community/questions/apache-virtual-host-with-multiple-tomcat-server</li> <li>https://github.com/redisson/redisson/wiki/2.-Configuration#221-yaml-file-based-configuration</li> </ul> Star"},{"location":"cloud/aws/aws-autoscaling-group/","title":"Amazon EC2 Auto Scaling","text":"<p>Amazon EC2 Auto Scaling \uad6c\uc131 \uc2e4\uc2b5</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 Amazon EC2 Auto Scaling\uc744 \ud1b5\ud574 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc5d0 \ub9de\uac8c \uc790\ub3d9 \ud655\uc7a5 \ucd95\uc18c\ub97c \ud574\ubcf4\ub294 \uc2e4\uc2b5\uc785\ub2c8\ub2e4. AWS\uc5d0\uc11c \uac00\uc7a5 \uae30\ubcf8\uc774 \ub418\ub294 EC2\ub97c \ud0c4\ub825\uc801\uc73c\ub85c \uc6b4\uc601\ud558\ub294 \ubc29\ubc95\uacfc Auto Scaling \uc124\uc815 \uad6c\uc131\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p></p> <p>Time to Complete: 0.5 hours</p> Star <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"cloud/aws/aws-autoscaling-group/#1-launch-template","title":"1. Launch Template \uad6c\uc131","text":""},{"location":"cloud/aws/aws-autoscaling-group/#launch-template","title":"Launch Template \uc124\uc815","text":"<p>Launch Template \uc0dd\uc131 \ud398\uc774\uc9c0 \ud639\uc740</p> <p>AutoScalingGroup \uc0dd\uc131 \ud398\uc774\uc9c0\uc5d0\uc11c launch template \uc0dd\uc131 </p> <ul> <li>\uc2dc\uc791 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc744 \uc785\ub825\ud558\uace0 \ucd08\uae30 \ubc84\uc804\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ucd94\uac00</li> <li>Autoscaling\uc5d0\uc11c \ud65c\uc6a9\ud560 Template\uc774\ubbc0\ub85c Auto Scaling guidance \ud65c\uc131\ud654</li> <li>EC2 Image \uc124\uc815 </li> <li>Instance type: t2.nano (512 MB RAM, 1 vCPUs)</li> <li>Key pair: \uae30\uc874\uc5d0 EC2 \uc811\uc18d\ub54c \uc0ac\uc6a9\ud558\ub358 key \uc120\ud0dd (\uc5c6\ub2e4\uba74 \uc0dd\uc131 \uac00\ub2a5)</li> <li>Network Settings </li> <li>Storage: Default</li> <li>Advanced Details &gt; User data</li> </ul> <pre><code>#!/bin/bash\nyum update -y\nyum install -y httpd\necho \"&lt;h1&gt; Hello World from $(hostname -f)&lt;/h1&gt;\" &gt; /var/www/html/index.html\nsystemctl start httpd\nsystemctl enable httpd\n</code></pre> <p></p> <p></p> <p>LaunchTemplate AWS \ucf58\uc194 \uc5d0\uc11c \ud655\uc778 \uac00\ub2a5</p>"},{"location":"cloud/aws/aws-autoscaling-group/#2-auto-scaling-groups","title":"2. Auto Scaling Groups \uad6c\uc131","text":""},{"location":"cloud/aws/aws-autoscaling-group/#auto-scaling-groups","title":"Auto Scaling Groups \uc124\uc815","text":"<p>Auto Scaling Group \uc0dd\uc131 \ud398\uc774\uc9c0</p> <ul> <li>Auto Scaling \uadf8\ub8f9 \uc774\ub984 \uc785\ub825 \ubc0f Launch template(\uc2dc\uc791 \ud15c\ud50c\ub9bf) \uc120\ud0dd</li> <li>Network </li> <li>Advanced option \uc5d0\uc11c LoadBalancer \ucd94\uac00 </li> <li>Min/Max \uac12 \uc124\uc815 \ubc0f CPU Trigger policy\ub97c 10\uc73c\ub85c \uc870\uc815 </li> <li>Review \ubc0f Create Autoscaling group \uc9c4\ud589</li> </ul>"},{"location":"cloud/aws/aws-autoscaling-group/#3","title":"3. \uc11c\ube44\uc2a4 \ud655\uc778","text":"<p>LoadBalancer \ucf58\uc194\uc5d0\uc11c LB \ubc0f EC2 \ucf58\uc194\uc5d0\uc11c 1\uac1c\uc758 instance\uac00 \uc0dd\uc131 \ub42c\ub294\uc9c0 \ud655\uc778</p> <p>Warn</p> <p>\uc0dd\uc131\ub41c LB\uc758 Default Security Group\uc758 Rule\uc5d0 80 port\uac00 \uc5f4\ub824\uc788\uc9c0 \uc54a\ub2e4\uba74 \uc218\ub3d9\uc73c\ub85c \ucd94\uac00 \ud544\uc694</p> <p>LB\uc640 EC2\uc758 \uc0c1\ud0dc\uac00 <code>RUNNING</code> \uc73c\ub85c \ubcc0\uacbd \ub418\uc5c8\uc73c\uba74 <code>Public DNS or IP</code>\ub85c \uc11c\ube44\uc2a4 \uc811\uc18d</p> <p>\ud574\ub2f9 <code>URL</code>\uc744 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc811\uc18d\ud558\uc5ec \uc815\uc0c1\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc911\uc778\uc9c0 \ud655\uc778</p> <pre><code>curl my-first-asg-1-190530202.ap-northeast-2.elb.amazonaws.com\n\n&lt;h1&gt; Hello World from ip-10-0-1-132.ap-northeast-2.compute.internal &lt;/h1&gt;\n</code></pre>"},{"location":"cloud/aws/aws-autoscaling-group/#4","title":"4. \ubd80\ud558 \uc0dd\uc131","text":"<p>AutoScaling Group\uc774 \uc124\uc815 \ud55c \ub300\ub85c \uc6b4\uc601\uc774 \ub418\ub294\uc9c0 \ud655\uc778\uc744 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc9c4 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 Stress test \uc9c4\ud589</p> <p>EC2 \ucf58\uc194\uc5d0\uc11c \uc0dd\uc131\ub41c instance\ub85c SSH \uc811\uc18d</p> <pre><code># install stress on Amazon Linux\nsudo amazon-linux-extras install epel -y\nsudo yum install stress -y\n\n# run CPU stress\nsudo stress -c 70\n</code></pre> <p>ASG \ucf58\uc194 Monitoring \ud0ed\uc5d0\uc11c EC2 instance\uc758 CPU\uac00 \uc62c\ub77c\uac00\ub294 \uac83\uc744 \ud655\uc778 \uac00\ub2a5 </p> <p>Activity log\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c scaling\uc774 \ub418\ub294 \uac83\uc744 \ud655\uc778  </p> <p>LB Endpoint\uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc778\uc2a4\ud134\uc2a4(\ucd1d 3\ub300)\ub85c \ud2b8\ub808\ud53d\uc774 \ubca8\ub7f0\uc2f1 \ub418\ub294\uc9c0 \ud655\uc778 </p>"},{"location":"cloud/aws/aws-autoscaling-group/#5","title":"5. \ud658\uacbd \uc0ad\uc81c","text":"<p>Auto Scaling \uadf8\ub8f9\uc744 \uc0ad\uc81c</p> <p>LoadBalancer \ucf58\uc194\uc5d0\uc11c LB \uc0ad\uc81c</p> <p>\ud83c\udf89 Congratulations, you have completed AWS Autoscaling Tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/aws-ecs-container/","title":"Deploy Container on Elastic Container Service","text":"<p>Amazon ECS\ub97c \ud1b5\ud574 Container \ubc30\ud3ec</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 Amazon ECS \ud1b5\ud574 Container\ub97c \ubc30\ud3ec\ud558\uace0 \uc811\uadfc\uc744 \ud574\ubcf4\ub294 \uc2e4\uc2b5 \uc785\ub2c8\ub2e4. AWS Elastic Container Service\uc758 Cluster, Service\uc758 \uc9c1\uc811 \uad6c\uc131\uc744 \ud1b5\ud574 \ud504\ub7ec\ub355\uc158 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\uc131 \ud558\uace0 \uad00\ub9ac \ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4</p> <p></p> <p>Time to Complete: 0.5 hours</p> Star <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> <li>\ubcf8\uc778\uc774 \uc0dd\uc131\ud55c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 freecode-todo, \uc18c\uc2a4 \ucf54\ub4dc</li> </ul>"},{"location":"cloud/aws/aws-ecs-container/#1-task-definitions","title":"1. Task Definitions \uc124\uc815","text":"<p>\ud558\ub098 \ud639\uc740 \uc5ec\ub7ec \uac1c\uc758 Container\ub85c \uad6c\uc131\ub41c \ud558\ub098\uc758 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 Task\uc815\uc758\ub85c \uc9c0\uc815 \ud558\uba70 Task \ub2e8\uc704\ub85c ECS\uc5d0 \ubc30\ud3ec </p> <p>ECS Dashboard \uc5d0\uc11c Task Definitions \uc120\ud0dd \ud6c4 Create new Task Definition</p> <ul> <li>Task Definition Name: \uc791\uc5c5 \uc815\uc758 \uc774\ub984, TD\uc774\ub984</li> <li>Requires compatibilities: FARGATE</li> <li>Task Role: Task\uc5d0\uc11c AWS \ub9ac\uc18c\uc2a4\uc5d0 API\ub85c \ud638\ucd9c\uc744 \ud574\uc57c \ud560 \uacbd\uc6b0 \uc0ac\uc6a9\ud558\ub294 IAM \uc5ed\ud560, \ubcc0\uacbd\uc5c6\uc74c</li> <li>Network Mode: AWS Fargate\uc5d0\uc11c\ub294 awsvpc\uac00 \uae30\ubcf8\uc774\uba70 \uadf8 \uc678\ub294 Linux\ub294 Docker\ub124\ud2b8\uc6cc\ud06c\uc774\uba70 Windows\uc758 \uacbd\uc6b0 NAT, Bridge\ubaa8\ub4dc \uc120\ud0dd \uac00\ub2a5, \ubcc0\uacbd\uc5c6\uc74c</li> <li>Operating System Family: Linux</li> <li>Task memory (MiB): Container\uc5d0 \ud560\ub2f9\ud560 \ucd5c\ub300 \uba54\ubaa8\ub9ac(\ud558\ub4dc \ub9ac\ubc0b)\uc774\uba70 ECS \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc62c\ub77c\uac00\ub294 Task\ub4e4\uc758 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub530\ub77c \uc6a9\ub7c9 \uacb0\uc815 \ud544\uc694: 0.5GB - 2GB \uc5d0\uc11c \uc120\ud0dd</li> <li>Task CPU (unit): Container\uc6a9\uc73c\ub85c \uc608\uc57d\ud560 CPU unit: 0.25 vCPU \u2013 16 vCPU \uc911\uc5d0 \uc120\ud0dd</li> </ul> <p></p> <p>Container Definitions \uc815\uc758 \ud56d\ubaa9\uc5d0 \uc544\ub798\uc640 \uac19\uc774 \uc2e4\uc81c Container\uc758 \uc774\ub984\uacfc \uc774\ubbf8\uc9c0 \uc8fc\uc18c \ub4f1\uc758 \ud544\uc218 \uc694\uc18c \ubc0f \uc800\uc7a5\uc18c, \ub85c\uae45, \ubcf4\uc548\uc5d0 \uad00\ub828\ud55c \uc120\ud0dd \uc694\uc18c \ub4e4\uc744 \uc9c0\uc815</p> <ul> <li>Container Name: \ucee8\ud14c\uc774\ub108 \uc774\ub984</li> <li>Image: \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 URL   \uc608) cloudacode/freecodetodo:latest</li> <li>Port Mappings: \uc678\ubd80\ub85c \ub178\ucd9c\ud560 \ucee8\ud14c\uc774\ub108 \ud3ec\ud2b8</li> </ul> <p></p>"},{"location":"cloud/aws/aws-ecs-container/#2-cluster","title":"2. Cluster \uc0dd\uc131","text":"<p>ECS Cluster \ucf58\uc194 \ud654\uba74\uc5d0\uc11c Cluster \uc0dd\uc131</p> <ul> <li>Template: Networking only</li> <li>Cluster Name: \ud074\ub7ec\uc2a4\ud130 \uc774\ub984</li> </ul> <p>Warn</p> <p>\uae30\uc874\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 VPC\ub97c \ud65c\uc6a9 \ud560 \uc608\uc815\uc774\ubbc0\ub85c \uc0c8\ub86d\uac8c Create VPC \ud558\uc9c0 \uc54a\ub294\ub2e4</p>"},{"location":"cloud/aws/aws-ecs-container/#3-service","title":"3. Service \uc124\uc815","text":"<p>\uc704\uc5d0\uc11c \uc0dd\uc131\ud55c \uc774\ub984\uc758 Cluster \ud074\ub9ad \ud6c4 \uc0c1\uc138 \ud654\uba74\uc5d0\uc11c \uc11c\ube44\uc2a4 \uc124\uc815</p> <p></p>"},{"location":"cloud/aws/aws-ecs-container/#service","title":"Service \uad6c\uc131","text":"<ul> <li>Task Definition: \uc791\uc5c5 \uc815\uc758 \uc774\ub984</li> <li>Cluster: Container\uac00 \ubc30\ud3ec\ub420 Cluster, cluster \uc774\ub984</li> <li>Service name: \uc0ac\uc6a9\ud560 \uc11c\ube44\uc2a4 \uc774\ub984 \uacb0\uc815, service \uc774\ub984</li> <li>Number of tasks: \uc11c\ube44\uc2a4\uc5d0 \ubc30\ud3ec\ud560(\uc218\ud3c9 \ud655\uc7a5) Task\uc758 \uac1c\uc218, 1\uac1c \uc774\uc0c1</li> <li>Minimum healthy percent: \ubc30\ud3ec \uc2dc RUNNING \uc0c1\ud0dc\ub97c \uc720\uc9c0\ud574\uc57c \ud558\ub294 \uc11c\ube44\uc2a4 \ub0b4 \uc791\uc5c5 \uc218\uc5d0 \ub300\ud55c \ucd5c\uc18c \ub9ac\uc18c\uc2a4 \ubc31\ubd84\uc728, 100</li> <li>Maximum percent: \ubc30\ud3ec \uc2dc RUNNING/ PENDING \uc0c1\ud0dc\ub97c \uc720\uc9c0\ud560 \ucd5c\ub300 \uc791\uc5c5 \uc218\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4 \ubc31\ubd84\uc728, 200</li> <li>Deployments: \uc791\uc5c5 \ubc30\ud3ec \uc815\ucc45(Rolling, Blue/Green), Rolling update</li> </ul>"},{"location":"cloud/aws/aws-ecs-container/#network","title":"Network \uad6c\uc131","text":"<ul> <li>VPC/Subnets: \uc6d0\ud558\ub294 VPC\uc640 Subnets\uc744 \uc9c0\uc815</li> <li>Security Group: Container\ub97c \uc678\ubd80\ub85c \ub178\ucd9c\ud560\ub54c \uc0ac\uc6a9\ud558\ub294 Port\ub97c Open(\uc608, Flask 5000\ud3ec\ud2b8)</li> <li>Load balancer Type: LB \ud0c0\uc785 \uc120\ud0dd, No</li> </ul>"},{"location":"cloud/aws/aws-ecs-container/#autoscaling","title":"AutoScaling \uad6c\uc131","text":"<ul> <li>Service Auto Scaling: AutoScaling \uc124\uc815 \uac00\ub2a5, Do not adjust</li> </ul> <p>\uc0dd\uc131 \uc644\ub8cc \ud6c4 ECS Cluster \ud56d\ubaa9\uc5d0\uc11c \uc11c\ube44\uc2a4 \uc0c1\ud0dc \ud655\uc778 (Task\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \ubc30\ud3ec \ubc0f Running \ud655\uc778)</p>"},{"location":"cloud/aws/aws-ecs-container/#4-service","title":"4. Service \ub3d9\uc791 \ud655\uc778","text":"<p>\uc11c\ube44\uc2a4\uac00 \uc815\uc0c1\uc801\uc73c\ub85c <code>ACTIVE</code> \uc0c1\ud0dc\uac00 \ud655\uc778\uc774 \ub418\uba74 TASK \uc0c1\uc138 \ud654\uba74\uc5d0\uc11c Public IP\ub85c \uc811\uc18d</p> <p></p> <p>\ud574\ub2f9 <code>URL</code>\uc744 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc811\uc18d\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc911\uc778\uc9c0 \ud655\uc778</p> <p></p>"},{"location":"cloud/aws/aws-ecs-container/#4","title":"4. \ud658\uacbd \uc0ad\uc81c","text":"<p>ECS Cluster \ucf58\uc194 \ud654\uba74\uc5d0\uc11c Cluster \uc0ad\uc81c</p> <p>\ud83c\udf89 Congratulations, you have completed Amazon Elastic Container Service tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/aws-elasticbeanstalk/","title":"Deploy a Flask app on Amazon ElasticBeanstalk","text":"<p>Amazon ElasticBeanstalk\ub85c Python Flask App \ubc30\ud3ec \uc2e4\uc2b5</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 Amazon Elastic Beanstalk\uc744 \ud1b5\ud574 \uc6f9\uc571\uc744 \uad6c\uc131 \ud574\ubcf4\ub294 \uc2e4\uc2b5\uc785\ub2c8\ub2e4. AWS\uc5d0\uc11c \uac00\uc7a5 \ub300\ud45c\uc801\uc778 PaaS\uc778 ElasticBeanstalk\ub97c \uc6b4\uc601\ud558\ub294 \ubc29\ubc95\uacfc \ucf54\ub4dc \ubc30\ud3ec \ubc29\ubc95\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p></p> <p>Time to Complete: 0.5 hours</p> Star <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> <li>AWS Cloud9 \uc0dd\uc131 \uac00\uc774\ub4dc</li> <li>AWS EB CLI \uc124\uce58 \uc124\uce58 \ud398\uc774\uc9c0</li> </ul> <pre><code>$ pip install awsebcli --upgrade --user\n$ eb --version\nEB CLI 3.20.3 (Python 3.7.1)\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#1-elasticbeanstalk","title":"1. ElasticBeanstalk \uad6c\uc131","text":"<p>Amazon Elastic Beanstalk</p>"},{"location":"cloud/aws/aws-elasticbeanstalk/#sample-code","title":"Sample Code","text":"<p>Flask sample</p> <pre><code>$ git clone https://github.com/cloudacode/FlaskIntroduction\n$ cd FlaskIntroduction\n# \uc774\ubc88 \uc2e4\uc2b5\uc5d0\uc11c\ub294 build \uc790\ub3d9\ud654\ub97c \uc5f0\ub3d9\uc744 \ud558\uc9c0 \uc54a\uc73c\uba70 Warning \uba54\uc2dc\uc9c0\ub97c \ud53c\ud558\uae30 \uc704\ud574 buildspec \ud30c\uc77c \uc0ad\uc81c\n$ rm -rf buildspec.yml\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#eb-application-environment","title":"EB Application \ubc0f environment \ubc30\ud3ec","text":"<pre><code>$ eb init -p python-3.7 flask-todo-demo --region ap-northeast-2\nApplication flask-todo has been created.\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#eb-environment","title":"EB Environment \ubc30\ud3ec","text":"<pre><code>$ eb create flask-todo-demo --vpc.elbpublic\n</code></pre> <p>\ub9cc\uc57d \ud2b9\uc815 VPC\uc5d0 \ubc30\ud3ec\ub97c \ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\ub294 vpc \uc635\uc158\uc744 \ucd94\uac00\uc801\uc73c\ub85c \ubd80\uc5ec</p> <pre><code>$ eb create flask-todo-demo -r ap-northeast-2 --vpc.id &lt;vpc-id&gt; \\\n--vpc.elbsubnets &lt;subnet-01,subnet-02&gt; --vpc.ec2subnets &lt;subnet-01,subnet-02&gt; \\\n--vpc.publicip --vpc.elbpublic\n</code></pre> <p>\ub9cc\uc57d Database \uae4c\uc9c0 \ud568\uaed8 \ubc30\ud3ec\ub97c \ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\ub294 <code>-db</code> \uc635\uc158\uc744 \ucd94\uac00</p> <p>Warn</p> <p>ElasticBeanstalk\ub97c \uc0dd\uc131\ud558\uba74\uc11c DB\ub97c \ud568\uaed8 \uc0dd\uc131\ud558\ub294 \uacbd\uc6b0 \ucd94\ud6c4\uc5d0 EB \uc0ad\uc81c\uc2dc DB\ub3c4 \ud568\uaed8 \uc0ad\uc81c\uac00 \ub418\ubbc0\ub85c RDS\ub294 \ubcc4\ub3c4\ub85c \uc0dd\uc131 \ud574\uc11c \uc5f0\ub3d9 \ud558\ub294 \uac83\uc744 \ucd94\ucc9c</p>"},{"location":"cloud/aws/aws-elasticbeanstalk/#eb","title":"(\uc635\uc158) EB \ud658\uacbd\ubcc0\uc218 \uc124\uc815","text":"<p>\ucd94\ud6c4 EB\uc5d0 \ud658\uacbd \ubcc0\uc218\ub97c \ud568\uaed8 \uc804\ub2ec \ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0</p> <pre><code>$ mkdir -p .ebextensions\n$ cat &lt;&lt;'EOF' &gt; .ebextensions/options.config\noption_settings:\n  - option_name: DB_HOST\n    value: eb-rds\n  - option_name: DB_NAME\n    value: todo\nEOF\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#eb_1","title":"EB \ubc30\ud3ec \ud655\uc778 \ubc0f \ub85c\uadf8","text":"<p>Elastic Beanstalk \ud658\uacbd \uad00\ub9ac CLI</p> <pre><code># \ub85c\uadf8 \ud655\uc778\n$ eb logs\n# EB \uc0c1\ud0dc \ud655\uc778\n$ eb status\nEnvironment details for: flask-todo-demo\n  Application name: flask-todo-demo\n  Region: ap-northeast-2\n  Deployed Version: app-a696-221024_235944023808\n  Environment ID: e-mdcmmemta3\n  Platform: arn:aws:elasticbeanstalk:ap-northeast-2::platform/Python 3.7 running on 64bit Amazon Linux 2/3.4.0\n  Tier: WebServer-Standard-1.0\n  CNAME: flask-todo-demo.eba-3htsmntp.ap-northeast-2.elasticbeanstalk.com\n  Updated: 2022-10-25 00:04:06.247000+00:00\n  Status: Ready\n  Health: Green\n</code></pre> <p>\ud574\ub2f9 <code>CNAME</code>\uc744 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc811\uc18d\ud558\uc5ec \uc815\uc0c1\uc801\uc73c\ub85c \uc811\uadfc \ub418\ub294\uc9c0 \ud655\uc778</p>"},{"location":"cloud/aws/aws-elasticbeanstalk/#2-eb","title":"2. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc218\uc815 \ubc0f EB \uc7ac\ubc30\ud3ec","text":""},{"location":"cloud/aws/aws-elasticbeanstalk/#_1","title":"\ucf54\ub4dc \uc218\uc815","text":"<p>FlaskIntroduction/static/css/main.css \uc5d0 background-color\ub97c lightblue\ub85c \ubcc0\uacbd</p> <pre><code>body, html {\n    margin: 0;\n    font-family: sans-serif;\n    background-color: lightblue;\n}\n</code></pre> <p>git \uc5d0 \uc218\uc815 \ub0b4\uc5ed \ucee4\ubc0b</p> <pre><code>$ git add static/css/main.css\n$ git commit -m \"change bg to lightblue\"\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#eb_2","title":"EB \uc7ac\ubc30\ud3ec","text":"<pre><code>$ eb deploy\n</code></pre>"},{"location":"cloud/aws/aws-elasticbeanstalk/#3","title":"3. \ud658\uacbd \uc0ad\uc81c","text":"<p>Elastic Beanstalk Environments \ucf58\uc194\uc5d0\uc11c \ud658\uacbd \uc0ad\uc81c</p> <p>\ud639\uc740</p> <pre><code>$ eb terminate\n</code></pre> <p>\ud83c\udf89 Congratulations, you have completed Deploying a Flask Application to Elastic Beanstalk</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/aws-emr-spark-bigdata/","title":"Analysis BigData through Amazon EMR, Apache Spark, Zepplin","text":"<p>Amazon EMR, Apache Spark, Zepplin\uc73c\ub85c \ube45\ub370\uc774\ud130 \ubd84\uc11d \ud558\uae30</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 Amazon EMR, Spark, Zepplin\uc744 \ud1b5\ud574 1\uc5b5\uac1c\uac00 \ub118\ub294 \ube44\ud589 \ub178\uc120 \uc815\ubcf4\ub97c \uac00\uc9c0\uace0 \uac00\uc7a5 \ub9ce\uc774 \ucd9c\ud56d \ud558\uace0 \ub3c4\ucc29\ud558\ub294 \ub3c4\uc2dc\uc640 \ube44\ud589\uc815\ubcf4 \uadf8\ub9ac\uace0 \uc9c0\uc5f0\ub41c \uc774\ub825 \ub4f1\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ud45c\ud604\ud558\ub294 \uc2dc\uc2a4\ud15c\uc744 \uad6c\uc131 \ud558\uc5ec \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \ub3c4\ucd9c \ud558\uc5ec \ubcf8\ub2e4.</p> <p>Time to Complete: 0.5 hours</p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#architecture","title":"Architecture","text":"Star"},{"location":"cloud/aws/aws-emr-spark-bigdata/#objective","title":"Objective","text":"<ul> <li>\ube45\ub370\uc774\ud130 \ubd84\uc11d \uc2dc\uc2a4\ud15c\uc758 \uae30\ubcf8\uc801\uc778 \uad6c\uc870\uc640 \ud65c\uc6a9 \uac00\ub2a5 \ubc94\uc704\ub97c \ud30c\uc545\ud55c\ub2e4.</li> <li>\ube45\ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778(\uc0dd\uc131, \uc218\uc9d1/\uc800\uc7a5, \ubd84\uc11d/\uac00\uacf5, \uacf5\uc720/\uc804\ub2ec)\uc5d0\uc11c AWS\uc758 \ud65c\uc6a9 \uc694\uc18c\ub97c \ud30c\uc545\ud55c\ub2e4.</li> <li>Zepplin\uc744 \ud1b5\ud574 Spark \ubd84\uc11d\uc5d4\uc9c4\uc744 \uc190\uc27d\uac8c \uad00\ub9ac\ud558\uace0 \ud6a8\uacfc\uc801\uc73c\ub85c \uacb0\uacfc\ub97c \ud45c\ud604\ud558\ub294 \ubc29\uc548\uc744 \ud30c\uc545\ud55c\ub2e4.</li> </ul>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#concepts","title":"Concepts","text":"<ul> <li>EMR: \ubc29\ub300\ud55c \uc591\uc758 \ub370\uc774\ud130\ub97c \ucc98\ub9ac \ubc0f \ubd84\uc11d\uc744 \uc704\ud55c \ube45\ub370\uc774\ud130 \ud074\ub7ec\uc2a4\ud130 \ud50c\ub7ab\ud3fc \uc774\uba70 Apache Hadoop, Apache Spark\uc744 \uc9c0\uc6d0 What is Amazon EMR?</li> <li>Spark: Apache Spark\ub294 \ube45 \ub370\uc774\ud130 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc8fc\ub85c \uc0ac\uc6a9\ub418\ub294 \uc624\ud508 \uc18c\uc2a4 \ubd84\uc0b0 \ucc98\ub9ac \uc2dc\uc2a4\ud15c. \ube60\ub978 \uc131\ub2a5\uc744 \uc704\ud574 \uc778 \uba54\ubaa8\ub9ac \uce90\uc2f1\uacfc \ucd5c\uc801\ud654\ub41c \uc2e4\ud589\uc744 \uc0ac\uc6a9\ud558\uba70, \uc77c\ubc18 \ubc30\uce58 \ucc98\ub9ac, \uc2a4\ud2b8\ub9ac\ubc0d \ubd84\uc11d, \uae30\uacc4 \ud559\uc2b5, \uadf8\ub798\ud504 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc0f \uc784\uc2dc \ucffc\ub9ac\ub97c \uc9c0\uc6d0 </li> <li>Zepplin: \ucee4\uba58\ub4dc\ub77c\uc778 \ud615\ud0dc\uc758 Spark \ub370\uc774\ud130 \ubd84\uc11d\uc744 Web\uc801\uc73c\ub85c \ud45c\ud604\ud558\ub294 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158</li> </ul>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#1-emr-cluster-spark","title":"1. EMR Cluster \uc0dd\uc131(Spark)","text":""},{"location":"cloud/aws/aws-emr-spark-bigdata/#emr-cluster","title":"EMR Cluster\uc758 \uae30\ubcf8\uc801\uc778 \uc2a4\ud399\uacfc \ud655\uc7a5 \ubc94\uc704\ub97c \uc124\uc815","text":"<p>EMR \uc2a4\ud399 \ud398\uc774\uc9c0</p> <p>Info<p>\uc2e4\uc2b5\uc740 r3.xlarge \uc2a4\ud399(30.5 GiB RAM, 4 vCPUs)\uc758 \uc628\ub514\ub9e8\ub4dc \uc778\uc2a4\ud134\uc2a4 3\ub300\ub85c \uc9c4\ud589, $0.399/hr x 3</p> </p> <p>EMR \ucf58\uc194 \uc811\uadfc \ud6c4 \ub2e4\uc74c\uacfc \uac19\uc774 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131</p> <p></p> <ul> <li>Cluster Name: \uc0ac\uc6a9\ud560 \ud074\ub7ec\uc2a4\ud130 \uc774\ub984</li> <li>Software Configuration : \ub370\uc774\ud130\ubd84\uc11d \uc5d4\uc9c4\uc744 \uc120\ud0dd, \uc2e4\uc2b5\uc5d0\uc11c\ub294 <code>Spark</code></li> <li>Hardware Configuration : \ub370\uc774\ud130\ubd84\uc11d \uc5d4\uc9c4 Worker \ub178\ub4dc\uc758 \uc0ac\uc774\uc988 \uacb0\uc815, \ube44\uc6a9 \uc808\uac10\uc744 \uc704\ud574 auto-termination \ud65c\uc131\ud654 (idle after 1 hr -&gt; \ubcc0\uacbd: <code>30mins</code>) </li> <li>Security and Access: EMR \uc11c\ubc84\uc5d0 \uc811\uc18d\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc73c\uba74 key pair\uc5d0 \ub300\ud574\uc11c Proceed without an EC2 key pair \uc120\ud0dd, SSH \uc811\uc18d\uc744 \uc6d0\ud560 \uacbd\uc6b0 \ubcf8\uc778\uc758 EC2 key pair \uc9c0\uc815</li> </ul> <p>\uc2e4\uc2b5\uc5d0\uc11c\ub294 <code>on-demand</code>\ub85c \uc9c4\ud589 \ud558\uc9c0\ub9cc \ub9cc\uc57d EMR \ub178\ub4dc\ub4e4\uc744 spot instance\ub85c \ube44\uc6a9\uc744 \ucd5c\uc801\ud654 \uc9c4\ud589\uc744 \ud558\ub294 \uacbd\uc6b0 \ucf58\uc194 \uc704\uc5d0 Advanced \uc635\uc158\uc5d0\uc11c \uc120\ud0dd \uac00\ub2a5</p> <p></p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#emr-cluster-security-group","title":"EMR Cluster\uc758 \uc6d0\uaca9 \uc811\uadfc\uc744 \uc704\ud574 Security Group \uc124\uc815","text":"<p>\uc544\ub798\uc640 \uac19\uc774 My IP\uc5d0 \ub300\ud574 8890, 22 \ud3ec\ud2b8\ub97c Add Rule </p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#2-emr-cluster","title":"2. EMR Cluster \uc811\uc18d","text":""},{"location":"cloud/aws/aws-emr-spark-bigdata/#emr-cluster-ssh-optional","title":"EMR Cluster\uc5d0 SSH \uc811\uc18d(Optional)","text":"<p>Info<p>SSH \uc811\uc18d\uc740 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131\uc2dc Security and Access\uc5d0\uc11c key pair\ub97c \ub4f1\ub85d\ud55c \uacbd\uc6b0\ub9cc \uac00\ub2a5</p> </p> <p>\uc9c0\uc815\ud55c Private key\ub97c \ud1b5\ud574 Cluster endpoint\uc5d0 \uc5f0\uacb0 </p> <p>Info<p>username: hadoop</p> </p> <p></p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#zeppelin-emr-cluster","title":"Zeppelin\uc744 \ud1b5\ud574 EMR Cluster \uc5f0\uacb0","text":"<p>\ud3ec\ud2b8\ub294 Master public DNS \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 8890 \ud3ec\ud2b8\ub85c \uc811\uc18d </p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#3","title":"3. \ub370\uc774\ud130 \ubd84\uc11d","text":"<p>\uc0d8\ud50c \ub370\uc774\ud130: \ubbf8\uad6d \uad50\ud1b5 \uc815\ubcf4 \ub370\uc774\ud130(\ud56d\uacf5) \uc57d 80GB </p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#_1","title":"\ube44\ud589\uc815\ubcf4 \ub370\uc774\ud130 \uc801\uc7ac \ubc0f \uce74\uc6b4\ud2b8 \uc218\ud589","text":"<p>Scala\ub97c \ud65c\uc6a9\ud558\uc5ec \ucffc\ub9ac\ub97c \uc791\uc131</p> <p>Info<p>\uc704 \ubbf8\uad6d \uad50\ud1b5 \uc815\ubcf4 cvs \ub370\uc774\ud130\ub97c \ubcf8\uc778\uc758 S3 bucket\uc5d0 \uc9c1\uc811 \uc62c\ub824\uc11c Spark\uc5d0 import\ub3c4 \uac00\ub2a5 \ud558\uc9c0\ub9cc \uc2e4\uc2b5\uc5d0\uc11c\ub294 \uc0ac\uc804\uc5d0 Parquet \ud3ec\uba67\uc73c\ub85c \uc555\ucd95\ub418\uc5b4 \uc62c\ub77c\uc628 \ud30c\uc77c\uc744 \ud65c\uc6a9</p> </p> <pre><code>val parquetFile = sqlContext.read.parquet(\"s3://us-east-1.elasticmapreduce.samples/flightdata/input/\")\nparquetFile.count()\n</code></pre> <p></p> <p>\ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc6a9\uc911 3\uac1c\ub9cc \ub3c4\ucd9c</p> <pre><code>parquetFile.take(3).foreach(println)\n</code></pre> <p>\ub370\uc774\ud130\ub97c Flights \ud14c\uc774\ube14\uc5d0 \uc801\uc7ac</p> <pre><code>parquetFile.registerTempTable(\"flights\")\n</code></pre> <p></p>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#-2000","title":"\ubd84\uc11d\ucffc\ub9ac - 2000\ub144\ub3c4\ubd80\ud130 \uac00\uc7a5 \ucd9c\ud56d\uc744 \ub9ce\uc774 \ud55c \uacf5\ud56d","text":"<pre><code>%sql\nSELECT origin, count(*) AS total_departures\nFROM flights\nWHERE year &gt;= 2000\nGROUP BY origin\nORDER BY total_departures\nDESC LIMIT 10\n</code></pre>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#-","title":"\ubd84\uc11d\ucffc\ub9ac - \ucd9c\ubc1c \uc9c0\uc5f0\uc774 \uac00\uc7a5 \ub9ce\uc558\ub358 \uacf5\ud56d","text":"<pre><code>%sql\nSELECT origin, count(depdelayminutes) AS total_delays\nFROM flights\nWHERE depdelayminutes &gt; 15 AND year &gt;= 2000\nGROUP BY origin\nORDER BY total_delays\nDESC LIMIT 10\n</code></pre>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#scala-","title":"Scala \ubd84\uc11d\ucffc\ub9ac - \uac00\uc7a5 \ucd9c\ud56d\uc744 \ub9ce\uc774 \ud55c \ub178\uc120","text":"<pre><code>%sql\nSELECT origin, dest, count(*) AS total_flights\nFROM flights\nWHERE year &gt;= 2000\nGROUP BY origin, dest\nORDER BY total_flights\nDESC LIMIT 10\n</code></pre>"},{"location":"cloud/aws/aws-emr-spark-bigdata/#4","title":"4. \ud658\uacbd \uc0ad\uc81c","text":"<p>EMR \ucf58\uc194 \uc811\uadfc \ud6c4 \ud074\ub7ec\uc2a4\ud130 \uc0ad\uc81c</p> <p>\ud83c\udf89 Congratulations, you have completed Amazon EMR, Apache Spark, Zepplin tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/aws-lightsail-container/","title":"Deploy Container on AWS Lightsail","text":"<p>AWS LightSail\uc5d0 Container \ubc30\ud3ec</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 AWS LightSail \ud1b5\ud574 Container\ub97c \ubc30\ud3ec\ud558\uace0 \uc811\uadfc\uc744 \ud574\ubcf4\ub294 \uc2e4\uc2b5 \uc785\ub2c8\ub2e4. AWS\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub97c \ubc30\ud3ec\ud560\uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4\uc911 \ud558\ub098\uc778 LightSail\uc5d0 \ub300\ud574 \ubc30\uc6cc \ubcf4\uace0 \ucee8\ud14c\uc774\ub108 \uc11c\ube44\uc2a4 \ubc30\ud3ec\ub97c \uc704\ud55c \uae30\ubcf8 \uc791\uc5c5\ub4e4\uc744 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Time to Complete: 0.5 hours</p> Star <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> <li>\ubcf8\uc778\uc774 \uc0dd\uc131\ud55c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 freecode-todo</li> <li>AWS CLI \ubc0f Lightsail Plugin\uc124\uce58 \uc124\uce58 \ud398\uc774\uc9c0</li> </ul> <p>Warning</p> <p>Cloud9\uc740 CLI \ubc84\uc804\uc774 1\uc774\uace0 IAM \uad8c\ud55c\uc774 \uc81c\ud55c \ub418\uae30 \ub54c\ubb38\uc5d0 local \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \uc2e4\uc2b5 \uc9c4\ud589</p>"},{"location":"cloud/aws/aws-lightsail-container/#1-create-a-container-server-on-lightsail","title":"1. Create a Container server on lightsail","text":""},{"location":"cloud/aws/aws-lightsail-container/#lightsail","title":"Lightsail\uc758 \uae30\ubcf8\uc801\uc778 \uc2a4\ud399\uacfc \ud655\uc7a5 \ubc94\uc704\ub97c \uc124\uc815","text":"<p>Lightsail \uc2a4\ud399 \ud398\uc774\uc9c0</p> <p>Info<p>\uc2e4\uc2b5\uc740 nano \uc2a4\ud399(512 MB RAM, 0.25 vCPUs)\uc73c\ub85c \uc9c4\ud589</p> </p> <pre><code>aws lightsail create-container-service \\\n--service-name &lt;YOUR_SERVICE_NAME&gt; --power nano --scale 1\n</code></pre> <p>Lightsail AWS \ucf58\uc194 \uc5d0\uc11c \ud655\uc778 \uac00\ub2a5 </p>"},{"location":"cloud/aws/aws-lightsail-container/#continaer","title":"Continaer \uc774\ubbf8\uc9c0 \ub2e4\uc6b4","text":"<pre><code>docker pull cloudacode/freecodetodo:latest\n</code></pre> <p>\ucc38\uace0: <code>cloudacode/freecodetodo</code> \uc18c\uc2a4 \ucf54\ub4dc</p>"},{"location":"cloud/aws/aws-lightsail-container/#container","title":"Container \uc774\ubbf8\uc9c0 \uc5c5\ub85c\ub4dc","text":"<pre><code>aws lightsail push-container-image --service-name &lt;YOUR_SERVICE_NAME&gt; \\\n --label flask-container --image cloudacode/freecodetodo:latest\n</code></pre> <p>Warning<p>output \uacb0\uacfc\ub85c \ub098\uc624\ub294 \":devops-flask-service.flask-container.[\uc22b\uc790]\"\uac00 \ubc30\ud3ec\uc2dc \uc0ac\uc6a9\ud560 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \uc815\ubcf4\uc774\ubbc0\ub85c \uacb0\uacfc \uac12\uc744 \uc800\uc7a5</p> </p>"},{"location":"cloud/aws/aws-lightsail-container/#2-deploy-the-container","title":"2. Deploy the container","text":""},{"location":"cloud/aws/aws-lightsail-container/#_1","title":"\ucee8\ud14c\uc774\ub108 \uba54\ud0c0\ub370\uc774\ud130 \ud30c\uc77c \uc0dd\uc131","text":"<p>containers.json</p> <pre><code>{\n    \"&lt;container-image-name&gt;\": {\n        \"image\": \":&lt;service-name&gt;.&lt;label&gt;.X\",\n        \"ports\": {\n            \"&lt;container-port&gt;\": \"HTTP\"\n        }\n    }\n}\n</code></pre> <p>\uc608\uc2dc)</p> <pre><code>{\n    \"freecodetodo\": {\n        \"image\": \":todo-service.flask-container.5\",\n        \"ports\": {\n            \"5000\": \"HTTP\"\n        }\n    }\n}\n</code></pre> <p>Note<p>\ubcf8\uc778\uc758 \uc11c\ube44\uc2a4\uc758 ports \ub9de\uac8c \ubcc0\uacbd \ud544\uc694, ex) nodejs \uae30\ubcf8\ud3ec\ud2b8\ub294 3000, flask\ub294 5000</p> </p>"},{"location":"cloud/aws/aws-lightsail-container/#endpoint","title":"\ucee8\ud14c\uc774\ub108\uc758 Endpoint \uc124\uc815 \ud30c\uc77c \uc0dd\uc131","text":"<p>public-endpoint.json</p> <pre><code>{\n    \"containerName\": \"&lt;container image name&gt;\",\n    \"containerPort\": &lt;container port&gt;\n}\n</code></pre> <p>\uc608\uc2dc)</p> <pre><code>{\n    \"containerName\": \"freecodetodo\",\n    \"containerPort\": 5000\n}\n</code></pre> <p>Note<p>\ubcf8\uc778\uc758 \uc11c\ube44\uc2a4\uc758 \ud3ec\ud2b8\uc5d0 \ub9de\uac8c \ubcc0\uacbd \ud544\uc694</p> </p>"},{"location":"cloud/aws/aws-lightsail-container/#_2","title":"\uc11c\ube44\uc2a4 \ubc30\ud3ec \uc218\ud589","text":"<pre><code>aws lightsail create-container-service-deployment --service-name &lt;YOUR_SERVICE_NAME&gt; \\\n--containers file://containers.json --public-endpoint file://public-endpoint.json\n</code></pre>"},{"location":"cloud/aws/aws-lightsail-container/#3","title":"3. \uc11c\ube44\uc2a4 \ud655\uc778","text":"<p>Lightsail \ucf58\uc194 \ud639\uc740 aws lightsail cli\ub85c \ud655\uc778</p> <pre><code>aws lightsail get-container-services --service-name &lt;YOUR_SERVICE_NAME&gt;\n</code></pre> <p>\uc744 \uc218\ud589\ud558\uc5ec <code>STATE</code>\uac00 <code>RUNNING</code> \uc73c\ub85c \uc0c1\ud0dc\uac00 \ubcc0\uacbd \ub418\uc5c8\uc73c\uba74 <code>URL</code>\ub85c \uc11c\ube44\uc2a4 \uc811\uc18d</p> <p></p> <p>\ud574\ub2f9 <code>URL</code>\uc744 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc811\uc18d\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc911\uc778\uc9c0 \ud655\uc778</p> <p></p>"},{"location":"cloud/aws/aws-lightsail-container/#4","title":"4. \ud658\uacbd \uc0ad\uc81c","text":"<p>Lightsail \ucf58\uc194 \ud639\uc740 aws lightsail cli \ub85c \uc0ad\uc81c</p> <pre><code>aws lightsail delete-container-service --service-name todo-service\n</code></pre> <p>\ud83c\udf89 Congratulations, you have completed AWS lightsail tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"cloud/aws/cloud9-python-docker/","title":"Develop Python and Docker on Cloud9","text":"<p>Cloud9\uc744 \ud1b5\ud574\uc11c Python \uacfc Docker \uac1c\ubc1c \ud658\uacbd \uad6c\uc131</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 AWS\uc758 Cloud9\ub97c \ud1b5\ud574 Python\uacfc Docker\ub97c \uac1c\ubc1c\ud558\ub294 \ud658\uacbd\uc744 \ub9cc\ub4dc\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \ub610\ud55c Cloud9\ub85c \uc811\uadfc\uc744 \uc704\ud55c Security Group \uc124\uc815\uacfc Disk volume \ucd94\uac00\ud558\ub294 \ubc29\ubc95\ub3c4 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Time to Complete: 0.5 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"cloud/aws/cloud9-python-docker/#1-what-is-the-cloud9","title":"1. What is the Cloud9","text":"<p>A cloud IDE for writing, running, and debugging code.  AWS Official Document</p>"},{"location":"cloud/aws/cloud9-python-docker/#2-how-to-use-cloud9","title":"2. How to use Cloud9","text":"<p>\ud83c\udf89 Congratulations, you have completed Cloud9 tutorial </p>"},{"location":"cloud/aws/ec2-setup/","title":"Launch an EC2, Deploy Flask app","text":"<p>AWS EC2 \uad6c\uc131 \ubc0f Python Flask \uc571 \ubc30\ud3ec</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 AWS\ub97c \ud1b5\ud574 \uc11c\ube44\uc2a4 \uad6c\uc131 \uc2dc \uac00\uc7a5 \uae30\ubcf8\uc774 \ub418\ub294 EC2 \uad6c\uc131 \uc2e4\uc2b5\uc744 \ud1b5\ud574\uc11c AWS\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4\ub4e4\uc744 \uc774\ud574 \ud558\uace0 AWS \ucf58\uc194 \ud65c\uc6a9 \ubc29\ubc95\uc744 \uc775\ud788\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. EC2\ub85c \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \ud65c\uc6a9 \ubc0f \uc11c\ube44\uc2a4 \ubc30\ud3ec\ub97c \uc704\ud55c \uae30\ubcf8 \uc791\uc5c5\ub4e4\uc744 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Time to Complete: 1-2 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"cloud/aws/ec2-setup/#system-architecture","title":"System Architecture","text":""},{"location":"cloud/aws/ec2-setup/#1-launch-ec2-instance","title":"1. Launch EC2 instance","text":"<p>https://ap-northeast-2.console.aws.amazon.com/ec2/v2/home?region=ap-northeast-2</p>"},{"location":"cloud/aws/ec2-setup/#choose-an-amazon-machine-imageami","title":"Choose an Amazon Machine Image(AMI)","text":"<p>Instance \uc758 OS \uc774\ubbf8\uc9c0\ub97c \uc120\ud0dd\ud558\ub294 \ub2e8\uacc4 \uc774\uba70 Amazon Linux, CentOS, Ubunt, WindowsOS \ub4f1 \ub2e4\uc591\ud55c OS \uc774\ubbf8\uc9c0\ub97c \uc120\ud0dd \uac00\ub2a5</p> <p><code>Amazon Linux 2 AMI (HVM), SSD Volume Type</code></p>"},{"location":"cloud/aws/ec2-setup/#chooose-an-instance-type","title":"Chooose an Instance Type","text":"<p>Instance\uc758 CPU, Memory , Network \uc6a9\ub7c9\uc744 \uc120\ud0dd \ud558\ub294 \ub2e8\uacc4\uc774\uba70 \uc77c\ubc18 \uc778\uc2a4\ud134\ud2b8 \ud0c0\uc785\uc678\uc5d0 \ub192\uc740 CPU, Memory, IO \ud0c0\uc785\ub3c4 \uc81c\uacf5</p> <p><code>t2.micro</code></p>"},{"location":"cloud/aws/ec2-setup/#instance-details","title":"Instance Details","text":"<p>Instance\uac00 \ubc30\ud3ec\ub418\ub294 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd VPC, Subnet) \uc124\uc815</p> <ul> <li>Number of instances: \ud55c\ubc88\uc5d0 \ubc30\ud3ec\ud560 \uc778\uc2a4\ud134\uc2a4\uc758 \uac1c\uc218\uc774\uba70 1\ub85c \uc720\uc9c0</li> <li>Purchasing option: Spot instances\ub97c \ud65c\uc6a9 \ud560\uac74\uc9c0\uc758 \uc720\ubb34, \uc120\ud0dd \ud558\uc9c0 \uc54a\uc74c</li> <li>Network: Default VPC \uc120\ud0dd</li> <li>Subnet: No preference</li> <li>Auto-assign Public IP: \uc790\ub3d9\uc73c\ub85c Public IP \ud560\ub2f9 \uc720\ubb34\ub97c \uccb4\ud06c \ud558\ub294 \ubd80\ubd84 Enable\ub85c \uc120\ud0dd</li> <li>IAM role: EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 IAM \uc5ed\ud560\uc744 \ubd80\uc5ec\ud574 \ucd94\ud6c4 API/ Secret key\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 AWS \uc18c\uc2a4 \uc790\uc6d0\uc744 \uad00\ub9ac \ud558\ub3c4\ub85d \uc124\uc815 \ud558\ub294 \ubd80\ubd84</li> <li>Tenancy: \ucd94\ud6c4\uc5d0 License\uc774\uc288 \ud639\uc740 \ub9e4\uc6b0 \ub0ae\uc740 \ub124\ud2b8\uc6cc\ud06c Latency\ub97c \uc704\ud574 \ud2b9\uc815 Hardware\uc5d0 Instance\ub97c \ubab0\uc544\uc11c \ubc30\uce58\ud560 \uc218 \uc788\ub294 \uae30\ub2a5, Default(Shared)\ub85c \uc120\ud0dd</li> </ul>"},{"location":"cloud/aws/ec2-setup/#instance-storage","title":"Instance Storage \uc124\uc815","text":"<p>Instance\uc758 Disk \uc6a9\ub7c9\uacfc \ucd94\uac00 Disk\ub97c \uc120\ud0dd, Root \ubcfc\ub968 size\uc640 Disk \ubcfc\ub968\uc758 \uc720\ubb34, size\ub97c \uc815\ud558\ub294 \ubd80\ubd84</p> <p>\uae30\ubcf8 <code>8GB</code>\ub85c \uc9c4\ud589</p>"},{"location":"cloud/aws/ec2-setup/#add-tags","title":"Add Tags","text":"<p>AWS\ucf58\uc194\uc5d0\uc11c Display \ub418\ub294 Tag \uc758 \uac12\uc744 \uc9c0\uc815 \ud558\ub294 \ubd80\ubd84 \uc774\uace0 Add Tag \ud15d \ud074\ub9ad \ud6c4 \uac12 \uc785\ub825 (*\ucd94\ud6c4 \uc190\uc27d\uac8c \uc0dd\uc131\ud55c \uc11c\ubc84\ub97c \ucc3e\uae30 \uc704\ud568\uc774\uba70 \uae30\uc5b5\ud560 \uc218 \uc788\ub294 \uc774\ub984\uc73c\ub85c \uc11c\ubc84 \uc774\ub984 \ubcc0\uacbd \uac00\ub2a5</p> <p><code>Key: Name, Value: Web Server</code></p>"},{"location":"cloud/aws/ec2-setup/#configure-security-group","title":"Configure Security Group","text":"<p>SG\ub294 Host \ub808\ubca8\uc758 \ubc29\ud654\ubcbd\uc774\uba70 Allow \uc815\ucc45\ub9cc \uac00\ub2a5\ud558\uba70 \uc11c\ube44\uc2a4\ud560 Port \ub9cc \ud5c8\uc6a9 \ud639\uc740 \uc6d0\uaca9 \uc811\uc18d\uc744 \uc704\ud55c \uc811\uadfc \ub300\uc5ed IP \ub85c\ub9cc \uc81c\ud55c\uc744 \ud1b5\ud574 \ubcf4\uc548 \uc218\uc900\uc744 \ub192\uc784</p> <p>Secuirty Group Name: <code>test-flask-sg</code></p> <ul> <li>SSH(22)<ul> <li>Type: SSH</li> <li>Source: My IP or Anywhere</li> </ul> </li> <li>TCP(5000, Flask)<ul> <li>Type: Custom TCP</li> <li>PORT: 5000</li> <li>Source: My IP or Anywhere</li> </ul> </li> </ul> <p>Note</p> <p>\ub9cc\uc57d node.js \ud639\uc740 django \ub85c \uc2e4\uc2b5\uc744 \uc218\ud589\ud560 \uc2dc\uc5d0 \ud574\ub2f9 \ud3ec\ud2b8\uc5d0 \ub9de\uac8c Custom TCP port \uc124\uc815 \ubcc0\uacbd</p>"},{"location":"cloud/aws/ec2-setup/#review-instance-launch","title":"Review Instance Launch","text":"<p>Instance \ubc30\ud3ec\ub97c \uc704\ud574 \uc9c0\uc815\ud55c \uc124\uc815\uac12\ub4e4\uc744 \ub9ac\ubdf0 \ud558\ub294 \ub2e8\uacc4 \uc774\uba70 \uc11c\ubc84\uc5d0 \uc811\uadfc\uc744 \uc704\ud55c key \ubc1c\uae09\uc744 \uc9c4\ud589, Launch \ud074\ub9ad\ud6c4 key pair \uc0dd\uc131</p> <p>Create a new key pair \uc9c4\ud589 \ud6c4 Download Key Pair</p> <p>Warning</p> <p>key\ub294 \uc7ac\ubc1c\uae09 \ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc548\uc804\ud55c \uacf3\uc5d0 key \ub97c \uc800\uc7a5 </p>"},{"location":"cloud/aws/ec2-setup/#2-monitor-ec2-instance","title":"2. Monitor EC2 instance","text":"<p>\uc815\uc0c1\uc801\uc73c\ub85c Instance\uac00 \ubc30\ud3ec \ub418\ub294\uc9c0 EC2 Dashboard\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5 Status Checks \uac00 2/2\uac00 \ub418\uba74 \uc815\uc0c1 \ubc30\ud3ec \uc644\ub8cc</p>"},{"location":"cloud/aws/ec2-setup/#3-access-ec2-instance","title":"3. Access EC2 instance","text":"<p>EC2 \ucf58\uc194\uc5d0\uc11c \uc0dd\uc131\ud55c \uc778\uc2a4\ud134\uc2a4 \uc120\ud0dd \ud6c4 connect \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uba74 \ud130\ubbf8\ub110\ub85c \uc811\uc18d \uac00\uc774\ub4dc\ub77c\uc778\uc774 \uc544\ub798\uc640 \uac19\uc774 \uc81c\uacf5</p> <pre><code> ssh -i &lt;your_key&gt; ec2-user@&lt;EC2_HOSTNAME&gt;\n</code></pre> <p>\ub9cc\uc57d Windows\ub97c \uc0ac\uc6a9 \ud558\uace0 \uc788\ub2e4\uba74 Xshell\uc744 \ud65c\uc6a9</p> <p>\uacf5\uc2dd \ud648\ud398\uc774\uc9c0\uc5d0\uc11c \ub2e4\uc6b4\ub85c\ub4dc URL: https://www.netsarang.co.kr/download/main.html</p> <p>\ud56d\ubaa9: Xshell5 https://www.netsarang.co.kr/download/down_form.html?code=512</p> <ul> <li>\uc0c8\ub85c\uc6b4 \uc138\uc158 \uc0dd\uc131 \ubc0f \uc0ac\uc6a9\uc790 \uc778\uc99d</li> </ul> <p> </p>"},{"location":"cloud/aws/ec2-setup/#4-run-python-flask-on-ec2-server","title":"4. Run Python Flask on EC2 server","text":"<p>\uc811\uadfc\ud55c Linux\uc5d0\uc11c Flask \uc124\uce58</p> <pre><code>pip3 install Flask\npip3 freeze &gt; requirements.txt\n</code></pre> <p>Flask app \ud30c\uc77c \uc124\uc815 <code>app.py</code></p> <pre><code>cat &lt;&lt;EOF &gt; app.py\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return \"Hello, EC2!\"\n\nif __name__ == \"__main__\":\n        app.run(debug=True, host='0.0.0.0', port=5000)\nEOF\n</code></pre> <p>Flask app \uc2e4\ud589</p> <pre><code>python3 app.py\n</code></pre> <p>EC2 \ucf58\uc194  \uc5d0\uc11c Public IPv4 address \ud655\uc778 \ud639\uc740 \ub9ac\ub205\uc2a4 \ucee4\uba58\ub4dc\ub85c <code>curl ifconfig.me</code> \ud6c4 \ud574\ub2f9 IP\uc5d0 Flask \ud3ec\ud2b8(5000) \uc73c\ub85c \uc811\uc18d \ubc0f \ud398\uc774\uc9c0 \ud655\uc778</p> <p>(\uc635\uc158) Flask\uc5d0 CSS, HTML \ud398\uc774\uc9c0\ub97c \uad6c\uc131 \ud558\uace0 \uc2f6\uc744 \uacbd\uc6b0 \uc544\ub798 \ucf54\ub4dc\ub97c \ucc38\uace0</p> <p>simple-flask-web-app</p> <p>\ud83c\udf89 Congratulations, you have completed EC2, Flask setup tutorial </p>"},{"location":"cloud/gcp/gcp-ce-setup/","title":"Launch a GCE, Deploy Flask app","text":"<p>GCP \ud658\uacbd \uad6c\uc131 \ubc0f Compute Engine \uad6c\ucd95</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 GCP\ub97c \ud1b5\ud574 \uc11c\ube44\uc2a4 \uad6c\uc131 \uc2dc \uac00\uc7a5 \uae30\ubcf8\uc774 \ub418\ub294 Compute Engine \uad6c\uc131 \uc2e4\uc2b5\uc744 \ud1b5\ud574\uc11c GCP\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4\ub4e4\uc744 \uc774\ud574 \ud558\uace0 GCP \ucf58\uc194 \ud65c\uc6a9 \ubc29\ubc95\uc744 \uc775\ud788\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. Compute Engine \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \ud65c\uc6a9 \ubc0f \uc11c\ube44\uc2a4 \ubc30\ud3ec\ub97c \uc704\ud55c \uae30\ubcf8 \uc791\uc5c5\ub4e4\uc744 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Time to Complete: 1-2 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>GCP Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"cloud/gcp/gcp-ce-setup/#system-architecture","title":"System Architecture","text":""},{"location":"cloud/gcp/gcp-ce-setup/#1-launch-gce-instance","title":"1. Launch GCE instance","text":"<p>https://console.cloud.google.com/compute</p>"},{"location":"cloud/gcp/gcp-ce-setup/#create-vm-instances","title":"Create VM instances","text":"<ul> <li>Name: <code>gcp-test</code></li> <li>Region: <code>asia-northeast3(Seoul)</code> Zone: <code>asia-northeast3-a</code></li> <li>Machine configuration: \uc778\uc2a4\ud134\uc2a4\uc758 \ud06c\uae30(\ud0c0\uc785)</li> <li>Confidential VM service: \ub370\uc774\ud130 \uc554\ud638\ud654 \uc635\uc158(<code>\ubcc0\uacbd \uc5c6\uc74c</code>)</li> <li>Container: GKE \ud639\uc740 GCE\uc5d0 \ucee8\ud14c\uc774\ub108\ub97c \ud65c\uc6a9 \uc635\uc158(<code>\ubcc0\uacbd \uc5c6\uc74c</code>)</li> <li>Boot Disk: OS \uc774\ubbf8\uc9c0(<code>Debian</code>)</li> <li>Identity and API access</li> <li>Service account: \uc778\uc2a4\ud134\uc2a4, \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc571\uc774 \ub2e4\ub978 GCP \uc11c\ube44\uc2a4\uc640 \uc0c1\ud638\uc791\uc6a9 \ud560\ub54c \ud544\uc694\ud55c \uc11c\ube44\uc2a4 \uacc4\uc815(<code>\ubcc0\uacbd \uc5c6\uc74c</code>)</li> <li>Access scopes: \uc811\uadfc \ubc94\uc704(<code>Allow default access</code>)</li> <li>Firewall: \ubc29\ud654\ubcbd</li> <li>Allow HTTP traffic (<code>\ubcc0\uacbd \uc5c6\uc74c</code>)</li> </ul>"},{"location":"cloud/gcp/gcp-ce-setup/#create-a-firewall","title":"Create a firewall","text":"<p>Flask \uc11c\ube44\uc2a4 \ud3ec\ud2b8(5000)\uc744 custom\ud558\uac8c firewall\uc5d0 \ucd94\uac00\uac00 \ud544\uc694</p> <p>\ub85c \uc811\uc18d \ud558\uc5ec Create Firewall Rule \uc120\ud0dd \ud6c4 \uc544\ub798\uc640 \uac19\uc774 \uc785\ub825</p> <ul> <li>Name: default-flask-app</li> <li>Network: default</li> <li>Prioity: 1000</li> <li>Direction of traffic: ingress</li> <li>Action on match: Allow</li> <li>Targets: All instances in the network</li> <li>Source filter: IP ranges</li> <li>Source IP Ranges: <code>0.0.0.0/0</code></li> <li>Protocol and ports:<ul> <li>Specified protocols and ports: <code>tcp</code> <code>5000</code></li> </ul> </li> </ul> <p>Note</p> <p>\ub9cc\uc57d node.js \ud639\uc740 django \ub85c \uc2e4\uc2b5\uc744 \uc218\ud589\ud560 \uc2dc\uc5d0 \ud574\ub2f9 \ud3ec\ud2b8\uc5d0 \ub9de\uac8c Custom TCP port \uc124\uc815 \ubcc0\uacbd</p>"},{"location":"cloud/gcp/gcp-ce-setup/#2-access-a-gce-instance","title":"2. Access a GCE instance","text":"<p>VM Instance \ucf58\uc194 \ud654\uba74 Connect \ud56d\ubaa9\uc5d0 <code>SSH</code> \ud074\ub9ad \ud6c4 <code>View gcloud command</code> \ub97c \ud1b5\ud574 \uc778\uc2a4\ud134\uc2a4 \uc811\uadfc </p> <p>gcloud command line \ucc3d\uc5d0\uc11c \uc624\ub978\ucabd \uc544\ub798 <code>RUN IN CLOUD SHELL</code> \ud074\ub9ad</p> <p>Cloud Shell\uc774 \uc5f4\ub9ac\uace0 \uc778\uc2a4\ud134\uc2a4 \uc811\uadfc\uc5d0 \ub300\ud55c \ucee4\uba58\ub4dc \ub77c\uc778\uc774 \uc790\ub3d9\uc73c\ub85c \uc785\ub825\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c \ucd94\uac00 \ubcc0\uacbd \uc5c6\uc774 \uc9c4\ud589 \ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc811\uadfc\uc774 \ub428 * SSH Key \uc0dd\uc131\uc774 \uc774\ub8e8\uc5b4\uc9c0\uace0 \ucd94\uac00 \uc785\ub825\uac12 \uc5c6\uc774 \ube48\uce78\uc73c\ub85c \uc9c4\ud589</p>"},{"location":"cloud/gcp/gcp-ce-setup/#3-run-python-flask-on-gce-server","title":"3. Run Python Flask on GCE server","text":"<p>GCE \ub9ac\ub205\uc2a4 \uc11c\ubc84\uc5d0 \uc811\uc18d \ud6c4 python3-pip \ud328\ud0a4\uc9c0 \uc124\uce58</p> <pre><code>sudo apt update\nsudo apt install python3-pip\n</code></pre> <p>\uc811\uadfc\ud55c Linux\uc5d0\uc11c Flask \uc124\uce58</p> <pre><code>pip3 install Flask\npip3 freeze &gt; requirements.txt\n</code></pre> <p>Flask app \ud30c\uc77c \uc124\uc815 <code>app.py</code></p> <pre><code>cat &lt;&lt;EOF &gt; app.py\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return \"Hello, GCE!\"\n\nif __name__ == \"__main__\":\n        app.run(debug=True, host='0.0.0.0', port=5000)\nEOF\n</code></pre> <p>Flask app \uc2e4\ud589</p> <pre><code>python3 app.py\n</code></pre> <p>GCE\uc758 External IP\ub97c \ud655\uc778 \ud6c4 \ud574\ub2f9 IP\uc5d0 Flask Port(5000)\uc73c\ub85c \uc811\uc18d \ubc0f \ud398\uc774\uc9c0 \ud655\uc778</p> <p>(\uc635\uc158) Flask\uc5d0 CSS, HTML \ud398\uc774\uc9c0\ub97c \uad6c\uc131 \ud558\uace0 \uc2f6\uc744 \uacbd\uc6b0 \uc544\ub798 \ucf54\ub4dc\ub97c \ucc38\uace0</p> <p>simple-flask-web-app</p> <p>\ud83c\udf89 Congratulations, you have completed GCE, Flask setup tutorial </p>"},{"location":"cloud/openstack/install-openstack/","title":"Deploy openstack(devstack) on EC2","text":"<p>EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud14c\uc2a4\ud2b8\uc6a9 Openstack \uc124\uce58</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 DevStack(\ud14c\uc2a4\ud2b8\uc6a9 Openstack)\uc744 EC2\uc5d0 \uc124\uce58\ud558\uace0 Horizon \ub300\uc2dc\ubcf4\ub4dc\ub97c \ud1b5\ud574 Openstack\uc758 \uae30\ubcf8 \ub9ac\uc18c\uc2a4(\ucef4\ud4e8\ud305, \uc2a4\ud1a0\ub9ac\uc9c0, \ub124\ud2b8\uc6cc\ud06c \ub4f1)\ub97c \ubc30\ud3ec\ud558\uace0 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Time to Complete: 1-2 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and PowerUser-level access to it</li> <li>Ubuntu 20.04, t3.xlarge, Spot, 50GB EC2 Instance</li> </ul>"},{"location":"cloud/openstack/install-openstack/#system-architecture","title":"System Architecture","text":"Star"},{"location":"cloud/openstack/install-openstack/#1-create-stack-user","title":"1. Create stack user","text":"<pre><code>sudo useradd -s /bin/bash -d /opt/stack -m stack\necho \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack\nsudo -u stack -i\n</code></pre>"},{"location":"cloud/openstack/install-openstack/#2-download-devstack","title":"2. Download Devstack","text":"<pre><code>sudo apt update\nsudo apt install git -y\ngit clone https://opendev.org/openstack/devstack\ncd devstack/\n</code></pre>"},{"location":"cloud/openstack/install-openstack/#3-install-devstack","title":"3. Install Devstack","text":""},{"location":"cloud/openstack/install-openstack/#update-config-file","title":"Update config file","text":"<p>DevStack\uc758 Password \ud30c\uc77c \uc124\uc815 <code>local.conf</code></p> <pre><code>cat &lt;&lt;EOF &gt; local.conf\n[[local|localrc]]\nADMIN_PASSWORD=cloudacode\nDATABASE_PASSWORD=cloudacode\nRABBIT_PASSWORD=cloudacode\nSERVICE_PASSWORD=cloudacode\nEOF\n</code></pre> <p>\uc124\uce58\uacfc\uc815 \uc911 python pip module upgrade\uc2dc\uc5d0 \ubc1c\uc0dd\ud558\ub294 \uacbd\uace0 \uba54\uc2dc\uc9c0\ub97c \ubb34\uc2dc\ud558\uae30 \uc704\ud574 <code>inc/python</code> \ud30c\uc77c \uc77c\ubd80\ub97c \uc218\uc815, 198\ubc88\uc9f8 \ub77c\uc778\uc5d0 \uc544\ub798 \uc635\uc158 \ucd94\uac00</p> <pre><code>--ignore-installed\n</code></pre> <p></p>"},{"location":"cloud/openstack/install-openstack/#install-devstack","title":"Install devstack","text":"<p>using <code>stack.sh</code> to install devstack. </p> <pre><code>./stack.sh\n</code></pre> <p>Warning</p> <p>will take a 15-20 minutes to install a lot of dependencies</p> <p>\uc815\uc0c1\uc801\uc73c\ub85c \uc644\ub8cc\uac00 \ub418\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uba54\uc2dc\uc9c0\ub97c \ud655\uc778 \ud560 \uc218 \uc788\ub2e4.</p> <pre><code>=================\n Async summary\n=================\n Time spent in the background minus waits: 342 sec\n Elapsed time: 1369 sec\n Time if we did everything serially: 1711 sec\n Speedup:  1.24982\n\nThis is your host IP address: 172.31.2.38\nThis is your host IPv6 address: ::1\nHorizon is now available at http://172.31.2.38/dashboard\nKeystone is serving at http://172.31.2.38/identity/\nThe default users are: admin and demo\nThe password: cloudacode\n\nServices are running under systemd unit files.\nFor more information see:\nhttps://docs.openstack.org/devstack/latest/systemd.html\n\nDevStack Version: xena\nOS Version: Ubuntu 20.04 focal\n</code></pre>"},{"location":"cloud/openstack/install-openstack/#4-access-openstack-dashboard","title":"4. Access Openstack dashboard","text":"<p>EC2 \ucf58\uc194  \uc5d0\uc11c Public IPv4 address \ud655\uc778 \ud639\uc740 \ub9ac\ub205\uc2a4 \ucee4\uba58\ub4dc\ub85c <code>curl ifconfig.me</code> \ud6c4 \ud574\ub2f9 IP\uc5d0 HTTP\ub85c \uc811\uc18d \ubc0f \ud398\uc774\uc9c0 \ud655\uc778</p> <p>Note</p> <p>ID: admin, PW: cloudacode</p> <p></p>"},{"location":"cloud/openstack/install-openstack/#5-create-an-instance","title":"5. Create an instance","text":""},{"location":"cloud/openstack/install-openstack/#6-manage-the-instance","title":"6. Manage the instance","text":"<pre><code>#Enable NAT for the instance network(02:35)\nsudo iptables -t nat -A POSTROUTING -o ens5 \\\n-s 172.24.4.0/24 -j MASQUERADE\n\n#Config port forward rule to expose network(24:35)\nsudo iptables -t nat -A PREROUTING -p tcp -i ens5 \\\n--dport 8000 -j DNAT --to-destination 172.24.4.185:8000\n</code></pre> <p>\ud83c\udf89 Congratulations, you have completed Openstack tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/","title":"Continuous delivery - AWS CodePipeline - ElasticBeanstalk","text":"<p>\uac1c\ubc1c \ube4c\ub4dc \ubc0f \ubc30\ud3ec \ud658\uacbd \uc790\ub3d9\ud654 \uc2e4\uc2b5</p> <p>CI/CD Pipeline \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc18c\uc2a4 \uad00\ub9ac, \ub3c4\ucee4 \ube4c\ub4dc \uc790\ub3d9\ud654, \uc11c\ube44\uc2a4 \ubc30\ud3ec \uae4c\uc9c0 \uc790\ub3d9\ud654</p> <p>Time to Complete: 2-3 hours</p> <p>Tutorial Prereqs:</p> <p>CI Integration</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#system-architecture","title":"System Architecture","text":"Star"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#1-setup-elasticbeanstalk","title":"1. Setup ElasticBeanstalk","text":"<p>ElasticBeanstalk Console</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#create-applicationcreate-a-web-app","title":"Create Application(Create a Web app)","text":"<ol> <li>Application Name</li> <li>Platform: Docker, Platform Branch: Docker running...Amazon Linux 2, Platform version: Recommended</li> <li>Application Code: Sample application</li> </ol> <p>EB(ElasticBeanstalk) app \uc0dd\uc131 \ud655\uc778\uae4c\uc9c0 \uc57d 5\ubd84 \uc18c\uc694</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#2-update-the-buildspec-file-for-eb","title":"2. Update the Buildspec file for EB","text":"<p>CodePipline\uc758 \uba85\uc138\uc11c buildspec.yml \uc744 \uc791\uc131</p> <p>\uc55e \uc2e4\uc2b5\uc5d0\uc11c \ub9cc\ub4e4\uc5c8\ub358 Buidspec \ud30c\uc77c\uc5d0 Elastic Beanstalk\uc5d0\uc11c \uc2e4\ud589\ud560 docker image \uc815\ubcf4\ub97c artifact\ub85c \ub118\uaca8\uc8fc\uae30 \uc704\ud55c \uc124\uc815\uc744 \ucd94\uac00</p> <pre><code>      - echo Writing image definitions file...\n      - printf '{\"AWSEBDockerrunVersion\":\"1\",\"Image\":{\"Name\":\"%s\"},\"Ports\":[{\"ContainerPort\":\"5000\"}]}' $IMAGE_REPO_NAME:$TAG &gt; Dockerrun.aws.json\nartifacts:\n    files: Dockerrun.aws.json\n</code></pre> <p>\uc608\uc2dc)</p> <pre><code>version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Docker Hub...\n      - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PW\n      - TAG=\"$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)\"\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $IMAGE_REPO_NAME:$TAG .\n      - docker tag $IMAGE_REPO_NAME:$TAG $IMAGE_REPO_NAME:$TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker image...\n      - docker push $IMAGE_REPO_NAME:$TAG\n      - echo Writing image definitions file...\n      - printf '{\"AWSEBDockerrunVersion\":\"1\",\"Image\":{\"Name\":\"%s\"},\"Ports\":[{\"ContainerPort\":\"5000\"}]}' $IMAGE_REPO_NAME:$TAG &gt; Dockerrun.aws.json\nartifacts:\n    files: Dockerrun.aws.json\n</code></pre> <p>Note</p> <p>\ub9cc\uc57d \ubcf8\uc778\uc774 \uc791\uc131\ud55c application\uc758 port\uac00 <code>8000</code>\uc774 \uc544\ub2c8\ub77c\uba74 \ubcf8\uc778 \ud3ec\ud2b8\uc5d0 \ub9de\uac8c \ubcc0\uacbd \ud544\uc694!   e.g., <code>{\"ContainerPort\":\"3000\"}</code></p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#3-setup-codepipeline","title":"3. Setup codepipeline","text":"<p>CodePipeline console</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#step-1-pipeline-settings","title":"Step 1: Pipeline settings","text":"<ol> <li>Pipeline Name</li> <li>Service Role: New Service Role</li> <li>Role Name: <code>AWSCodePipelineServiceRole-ap-northeast-2-[Pipeline Name]</code></li> <li>AWS CodePipeline\uc774 \uc774 \uc0c8 \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \uc0ac\uc6a9\ud560 \uc11c\ube44\uc2a4 \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\ub3c4\ub85d \ud5c8\uc6a9 \ud65c\uc131\ud654</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#step-2-source-stage","title":"Step 2: Source Stage","text":"<ol> <li>\uc18c\uc2a4: Github(Version 1), \ub0b4 GitHub \uacc4\uc815\uc758 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac</li> <li>Github v2\uac00 \uad8c\uace0 \uc0ac\ud56d\uc774\ub098 \uc2e4\uc2b5\uc740 v1\ub85c \uc9c4\ud589: v2 \ubcc0\uacbd\uc2dc \ucc38\uace0</li> <li>Repository, Branch: \ubcf8\uc778\uc758 Repo, \uc6d0\ud558\ub294 Branch name e.g., main, dev, release</li> <li>Detection option: GitHub Webhook(recommended)</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#step-3-build-stage","title":"Step 3: Build Stage","text":"<p>\uc55e \uc2e4\uc2b5 \uc5d0\uc11c \uc124\uc815\ud55c codebuild \ud504\ub85c\uc81d\ud2b8 \ud65c\uc6a9, \ub9cc\uc57d \uc0c8\ub85c\uc6b4 codebuild project\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 \uc55e \uc2e4\uc2b5 \uac00\uc774\ub4dc\ub77c\uc778\uc5d0 \ub530\ub77c\uc11c \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#step-4-deploy-stage","title":"Step 4: Deploy Stage","text":"<ol> <li>Provider: AWS Elastic Beanstalk</li> <li>Application Name, Environment Name: \uc704\uc5d0\uc11c \uc790\ub3d9 \uc0dd\uc131\ud55c EB \uc815\ubcf4</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#4-verify-codepipeline","title":"4. Verify CodePipeline","text":""},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#pull-requestmerge","title":"\ud14c\uc2a4\ud2b8 Pull Request/Merge","text":"<p>\ubcc4\ub3c4\uc758 Branch\ub97c \ub9cc\ub4e4\uc5b4 flask-app\uc758 \ucf54\ub4dc \ubcc0\uacbd(\uc608, style.css \ubc30\uacbd \ubcc0\uacbd) \ud6c4 main branch\ub85c PR \uc218\ud589.</p> <p>https://ap-northeast-2.console.aws.amazon.com/codesuite/codepipeline/pipelines</p> <p>Pipeline \ub3c4\uad6c\uac00 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc778\uc9c0\ud558\uc5ec \uc790\ub3d9\uc73c\ub85c \ube4c\ub4dc/\ubc30\ud3ec\uac00 \uc218\ud589 \ub418\ub294\uc9c0 \ud655\uc778</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#elasticbeanstalk-url","title":"ElasticBeanstalk \ud658\uacbd URL \ud655\uc778","text":"<p>EB\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud658\uacbd URL \ud655\uc778 \ud6c4 \uc815\uc0c1\uc801\uc73c\ub85c \uc6f9\ud398\uc774\uc9c0\uc5d0 \ubcc0\uacbd\uc774 \uc77c\uc5b4\ub0ac\ub294\uc9c0 \ud655\uc778</p> <p>\ud83c\udf89 Congratulations, you have completed Continuous delivery - AWS CodePipeline tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"devops/cicd/aws-codepipeline-delivery-eb/#_1","title":"\ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/single-container-docker-configuration.html#docker-configuration.no-compose</li> <li>https://d1.awsstatic.com/whitepapers/DevOps/practicing-continuous-integration-continuous-delivery-on-AWS.pdf</li> <li>https://docs.aws.amazon.com/codebuild/latest/userguide/sample-elastic-beanstalk.html#sample-elastic-beanstalk-codepipeline</li> <li>https://docs.aws.amazon.com/ko_kr/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html#tutorials-four-stage-pipeline-prerequisites-jenkins-configure</li> </ul>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/","title":"Continuous delivery - AWS CodePipeline - ECS","text":"<p>\uac1c\ubc1c \ube4c\ub4dc \ubc0f \ubc30\ud3ec \ud658\uacbd \uc790\ub3d9\ud654 \uc2e4\uc2b5</p> <p>CI/CD Pipeline \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc18c\uc2a4 \uad00\ub9ac, \ub3c4\ucee4 \ube4c\ub4dc \uc790\ub3d9\ud654, \uc11c\ube44\uc2a4 \ubc30\ud3ec \uae4c\uc9c0 \uc790\ub3d9\ud654</p> <p>Time to Complete: 2-3 hours</p> <p>Tutorial Prereqs:</p> <p>CI Integration</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> </ul>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#system-architecture","title":"System Architecture","text":"Star"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#1-setup-elastic-container-service","title":"1. Setup Elastic Container Service","text":"<p>Setup ECS</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#2-update-the-buildspec-file-for-ecs","title":"2. Update the Buildspec file for ECS","text":"<p>CodePipline\uc758 \uba85\uc138\uc11c buildspec.yml \uc744 \uc791\uc131</p> <p>\uc55e \uc2e4\uc2b5 \uc5d0\uc11c \ub9cc\ub4e4\uc5c8\ub358 Buidspec \ud30c\uc77c\uc5d0 ECS\uc5d0\uc11c \uc2e4\ud589\ud560 docker image \uc815\ubcf4\ub97c artifact\ub85c \ub118\uaca8\uc8fc\uae30 \uc704\ud55c \uc124\uc815\uc744 \ucd94\uac00</p> <pre><code>      - echo Writing image definitions file...\n      - printf '[{\"name\":\"cloudacode-freecode-todo\",\"imageUri\":\"%s\"}]' $IMAGE_REPO_NAME:$TAG &gt; imagedefinitions.json\nartifacts:\n    files: imagedefinitions.json\n</code></pre> <p>Warn</p> <p>imagedefinitions.json\uc5d0 name\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uac12\uc740 ECS TaskDefinition\uc5d0\uc11c \uc815\uc758\ud55c Container Name\uacfc \ub3d9\uc77c \ud574\uc57c\ud55c\ub2e4</p> <p>\uc608\uc2dc)</p> <pre><code>version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Docker Hub...\n      - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PW\n      - TAG=$TAG_VERSION\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $IMAGE_REPO_NAME:$TAG .\n      - docker tag $IMAGE_REPO_NAME:$TAG $IMAGE_REPO_NAME:$TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker image...\n      - docker push $IMAGE_REPO_NAME:$TAG\n      - echo Writing image definitions file...\n      - printf '[{\"name\":\"cloudacode-freecode-todo\",\"imageUri\":\"%s\"}]' $IMAGE_REPO_NAME:$TAG &gt; imagedefinitions.json\nartifacts:\n    files: imagedefinitions.json\n</code></pre>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#2-setup-code-connection","title":"2. Setup Code Connection","text":"<p>Code Connection console</p> <p>Connections -&gt;  Create Connection - Select a Provider: GitHub - Connection name: \ucee4\ub125\uc158 \uc774\ub984</p> <p>Install a new app -&gt; \ubcf8\uc778 Repo \uc120\ud0dd </p> <p>Github\uc5d0 app\uc774 \uc5f0\ub3d9 \ub418\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 connection\uc744 \ud655\uc778 \uac00\ub2a5 </p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#3-setup-codepipeline","title":"3. Setup codepipeline","text":"<p>CodePipeline console</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#step-1-pipeline-settings","title":"Step 1: Pipeline settings","text":"<ol> <li>Pipeline Name</li> <li>Service Role: New Service Role</li> <li>Role Name: <code>AWSCodePipelineServiceRole-ap-northeast-2-[Pipeline Name]</code></li> <li>AWS CodePipeline\uc774 \uc774 \uc0c8 \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \uc0ac\uc6a9\ud560 \uc11c\ube44\uc2a4 \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\ub3c4\ub85d \ud5c8\uc6a9 \ud65c\uc131\ud654</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#step-2-source-stage","title":"Step 2: Source Stage","text":"<ol> <li> <p>\uc18c\uc2a4: Github(Version 2), \ub0b4 GitHub \uacc4\uc815\uc758 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac Connection</p> <p>Info</p> <p>Connection\uc774 \uc5c6\ub294 \uacbd\uc6b0 2. Setup Code Connection \uc791\uc5c5 \ub2e4\uc2dc \uc218\ud589</p> </li> <li> <p>Repository, Branch: \ubcf8\uc778\uc758 Repo, \uc6d0\ud558\ub294 Branch name e.g., main, dev, release</p> </li> <li>Detection option: Start the pipeline on source code change</li> <li>Output artifact format: CodePipeline default</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#step-3-build-stage","title":"Step 3: Build Stage","text":"<p>\uc55e \uc2e4\uc2b5 \uc5d0\uc11c \uc124\uc815\ud55c codebuild \ud504\ub85c\uc81d\ud2b8 \ud65c\uc6a9, \ub9cc\uc57d \uc0c8\ub85c\uc6b4 codebuild project\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 \uc55e \uc2e4\uc2b5 \uac00\uc774\ub4dc\ub77c\uc778\uc5d0 \ub530\ub77c\uc11c \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#step-4-deploy-stage","title":"Step 4: Deploy Stage","text":"<ol> <li>Provider: Amazon ECS</li> <li>Region: Asia Pacific(Seoul)</li> <li>Cluster Name: ECS \uc2e4\uc2b5\uc5d0\uc11c \uc0dd\uc131\ud55c \ud074\ub7ec\uc2a4\ud130 \uc9c0\uc815</li> <li>Service Name: ECS \uc2e4\uc2b5\uc5d0\uc11c \uc0dd\uc131\ud55c \uc11c\ube44\uc2a4 \uc9c0\uc815</li> <li>Image definitions file, Deployment timeout: \ubcc0\uacbd \uc0ac\ud56d \uc5c6\uc74c</li> </ol>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#4-verify-codepipeline","title":"4. Verify CodePipeline","text":""},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#pull-requestmerge","title":"\ud14c\uc2a4\ud2b8 Pull Request/Merge","text":"<p>\ubcc4\ub3c4\uc758 Branch\ub97c \ub9cc\ub4e4\uc5b4 flask-app\uc758 \ucf54\ub4dc \ubcc0\uacbd(\uc608, style.css \ubc30\uacbd \ubcc0\uacbd) \ud6c4 main branch\ub85c PR \uc218\ud589.</p> <p>https://ap-northeast-2.console.aws.amazon.com/codesuite/codepipeline/pipelines</p> <p>Pipeline \ub3c4\uad6c\uac00 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc778\uc9c0\ud558\uc5ec \uc790\ub3d9\uc73c\ub85c \ube4c\ub4dc/\ubc30\ud3ec\uac00 \uc218\ud589 \ub418\ub294\uc9c0 \ud655\uc778</p> <p></p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#dockerhub","title":"DockerHub\uc5d0 \uc2e0\uaddc \uc774\ubbf8\uc9c0 \ud655\uc778","text":"<p>DockerHub \ubcf8\uc778 \ud504\ub85c\uc81d\ud2b8 Repo\uc5d0 \uc2e0\uaddc Image\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc5c5\ub85c\ub4dc \ub418\uc5c8\ub294\uc9c0 \ud655\uc778</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#ecs-url","title":"ECS \ud658\uacbd URL \ud655\uc778","text":"<p>ECS Cluster Console \uc5d0\uc11c Task Definition\uc774 \uc5c5\ub370\uc774\ud2b8 \ub41c \ubc84\uc804\uc73c\ub85c \ubc30\ud3ec\uac00 \uc77c\uc5b4\ub0ac\ub294\uc9c0 \ud655\uc778</p>"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#_1","title":"\ud658\uacbd \uc0ad\uc81c","text":"<p>ECS Cluster Console\uc640 CodePipeline console \uc5d0\uc11c \uc2e4\uc2b5 \ud504\ub85c\uc81d\ud2b8 \uc0ad\uc81c</p> <p>\ud83c\udf89 Congratulations, you have completed Continuous delivery - AWS CodePipeline ECS tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"devops/cicd/aws-codepipeline-delivery-ecs/#_2","title":"\ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>https://d1.awsstatic.com/whitepapers/DevOps/practicing-continuous-integration-continuous-delivery-on-AWS.pdf</li> </ul>"},{"location":"devops/cicd/github-action-dockerhub/","title":"Publishing Docker images - GitHub Action","text":"<p>\uac1c\ubc1c \ube4c\ub4dc \ud658\uacbd \uad6c\uc131 \ubc0f Container \ube4c\ub4dc \uc790\ub3d9\ud654 \uc2e4\uc2b5</p> <p>GitHub Action\uc744 master \ud639\uc740 main branch\ub85c \ucf54\ub4dc\uac00 \ucee4\ubc0b\uc774 \ub418\uba74 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub3c4\ucee4\ub85c \ube4c\ub4dc \uc790\ub3d9\ud654 \ubc0f \ub3c4\ucee4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac(hub.docker.com) \uc5d0 \uc774\ubbf8\uc9c0 \ub4f1\ub85d</p> <p>Time to Complete: 1 hour</p> <p>Tutorial Prereqs:</p> <ul> <li>An Administrator-level for GitHub Repo</li> <li>Understand what is the GitHub Actions</li> </ul>"},{"location":"devops/cicd/github-action-dockerhub/#system-architecture","title":"System Architecture","text":""},{"location":"devops/cicd/github-action-dockerhub/#1-create-encrypted-secrets-for-a-github-repo","title":"1. Create encrypted secrets for a GitHub Repo","text":"<p>creating-encrypted-secrets-for-a-repository</p> <ul> <li>Name: <code>DOCKER_USERNAME</code>, Vaule: <code>Your DockerHub Account Name</code></li> <li>Name: <code>DOCKER_PASSWORD</code>, Value: <code>Your DockerHub Password</code></li> </ul>"},{"location":"devops/cicd/github-action-dockerhub/#2-create-a-workflow-to-use-actions","title":"2. Create a workflow to use actions","text":"<p>\ucd5c\uc0c1\uc704 \ub514\ub809\ud1a0\ub9ac <code>.github/workflows/github-actions-dockerhub.yml</code>\uc5d0 workflow \uc2a4\ud399\uc744 \uc544\ub798\uc640 \uac19\uc774 \uba85\uc2dc</p> <pre><code>name: Publish Docker image\n\non:\n  pull_request:\n    types: [assigned, opened, synchronize, reopened]\n\njobs:\n  push_to_registry:\n    name: Push Docker image to Docker Hub\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out the repo\n        uses: actions/checkout@v3\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7\n        with:\n          images: dockerhub-namespace/dockerhub-repository\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671\n        with:\n          context: .\n          file: ./Dockerfile\n          push: true\n          tags: ${{ steps.meta.outputs.tags }}\n          labels: ${{ steps.meta.outputs.labels }}\n</code></pre> <p>Line 25 \ubc88\uc9f8 \uc904\uc5d0 \ubcf8\uc778\uc758 <code>dockerhub-namespace/repo-name</code> \uc73c\ub85c \ubcc0\uacbd\ud6c4 code commit &amp; main branch\uc5d0 merge</p>"},{"location":"devops/cicd/github-action-dockerhub/#3-verify-github-action","title":"3. Verify GitHub Action","text":"<ul> <li>Git Branch \uc0dd\uc131 \ud6c4 \ucf54\ub4dc \uc218\uc815 \ubc0f Commit</li> <li>GitHub\uc5d0\uc11c Main Branch\ub85c Pull Request \uc218\ud589</li> <li>Pull Request \uc9c4\ud589 \ud654\uba74\uc5d0\uc11c Github Action\uc774 \ub3d9\uc791 \ud558\ub294\uc9c0 \ud655\uc778 </li> </ul>"},{"location":"devops/cicd/github-action-dockerhub/#4-verify-dockerhub-image","title":"4. Verify DockerHub image","text":"<p>\uc774\ubbf8\uc9c0\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \ubcf8\uc778 Repo\uc5d0 \uc5c5\ub85c\ub4dc \ub418\uc5c8\ub294\uc9c0 \ud655\uc778 https://hub.docker.com</p> <p>Note</p> <p>workflow \uc2a4\ud399 \ud30c\uc77c\uc5d0\uc11c \ubcc4\ub3c4\ub85c tag\ub97c \uc9c0\uc815 \ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 pr \ubc88\ud638\uac00 image tag\ub85c \ubd80\uc5ec\ub428</p>"},{"location":"devops/cicd/github-action-dockerhub/#reference","title":"Reference","text":"<ul> <li>https://docs.github.com/en/actions/guides/publishing-docker-images</li> </ul> <p>\ud83c\udf89 Congratulations, you have completed Publishing Docker images - GitHub Action tutorial</p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/","title":"Publishing Docker images - AWS CodeBuild","text":"<p>\uac1c\ubc1c \ube4c\ub4dc \ud658\uacbd \uad6c\uc131 \ubc0f Container \ube4c\ub4dc \uc790\ub3d9\ud654 \uc2e4\uc2b5</p> <p>CodeBuild\ub97c \ud1b5\ud574 \ucf54\ub4dc\uc758 Pull Request\uac00 \uc77c\uc5b4\ub098\uba74 \ub3c4\ucee4 \ube4c\ub4dc \ubc0f \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc774\ubbf8\uc9c0 \ub4f1\ub85d \uc790\ub3d9\ud654 \uc2e4\uc2b5</p> <p>Time to Complete: 2-3 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>An AWS Account and Administrator-level or PowerUser-level access to it</li> <li>Fork cloudacode/FlaskIntroduction Repository</li> </ul>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#system-architecture","title":"System Architecture","text":"Star"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#1-create-an-aws-codebuild-project","title":"1. Create an AWS CodeBuild Project","text":""},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#make-a-buildspec-file-for-codebuild","title":"Make a BuildSpec file for CodeBuild","text":"<p>\ucd5c\uc0c1\uc704 \ub514\ub809\ud1a0\ub9ac\uc5d0 CodeBuild\uc758 \uc791\uc5c5\uc744 \uc815\uc758\ud55c <code>buildspec.yml</code>\ub97c \uc0dd\uc131</p> <p>Build Specification reference \ubb38\uc11c</p> <p>\uc608\uc2dc)</p> <pre><code>version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Docker Hub...\n      - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PW\n      - TAG=$TAG_VERSION\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $IMAGE_REPO_NAME:$TAG .\n      - docker tag $IMAGE_REPO_NAME:$TAG $IMAGE_REPO_NAME:$TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker image...\n      - docker push $IMAGE_REPO_NAME:$TAG\n</code></pre> <p>\ub9cc\uc57d TAG \ubc84\uc804\uc744 unique\ud55c commit hash\ub85c \uc800\uc7a5 \ud558\uace0 \uc2f6\ub2e4\uba74</p> <pre><code>      - TAG=\"$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)\"\n</code></pre>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#setup-the-codebuild","title":"Setup the codebuild","text":"<p>Go to CodeBuild console</p> <ol> <li>Project configuration<ul> <li>Project \uc774\ub984 \uc785\ub825</li> <li>Enable build badge \ud65c\uc131\ud654</li> </ul> </li> <li>Source<ul> <li>Connecting using OAuth \ub85c GitHub\uacfc \uc5f0\ub3d9</li> <li>\ub9cc\uc57d, Personal access token\uc73c\ub85c \uc9c4\ud589\uc2dc GitHub Personal access token \uc0dd\uc131 \ud544\uc694 \ucc38\uace0 \ubc0f \uad8c\ud55c\uc740 repo, admin:repo_hook \ucc38\uace0</li> </ul> </li> <li>Primary source webhook events<ul> <li>Webhook: \ucf54\ub4dc \ubcc0\uacbd\uc774 \uc774 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ud478\uc2dc\ub420 \ub54c\ub9c8\ub2e4 \ub2e4\uc2dc \ube4c\ub4dc</li> <li>Event Type: <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_REOPENED</code></li> <li>\ub9cc\uc57d, \ud2b9\uc815 Branch \uc774\ub984\uc774\ub098 Tag\ub85c \uc774\ubca4\ud2b8\ub97c \uac10\uc9c0 \ud558\uace0 \uc2f6\ub2e4\uba74 <code>Start a build under these condition</code>\uc5d0 \ud544\ud130 \ucd94\uac00 \ucc38\uace0 \ubb38\uc11c    e.g., feature/ \ube0c\ub79c\uce58 \uc774\ubca4\ud2b8\ub9cc <code>HEAD_REF: ^refs/heads/feature/*</code></li> </ul> </li> <li>\ud658\uacbd(Environment)<ul> <li>Environment image: \uad00\ub9ac\ud615 \uc774\ubbf8\uc9c0, Amazon Linux 2, Standard, aws/codebuild/amazonlinux2-x86_64-standard:4.0</li> <li>Privileged: \uad8c\ud55c \uc2b9\uaca9 \ud65c\uc131\ud654 (Enable this flag if you want to build Docker images or want your builds to get elevated privileges)</li> <li>\uc11c\ube44\uc2a4 \uc5ed\ud560: \uc0c8 \uc11c\ube44\uc2a4 \uc5ed\ud560 (Name: default e.g., codebuild-[project_name]-service-role)</li> <li>Additional configuration \uc5d0 \ud658\uacbd \ubcc0\uc218 \uc124\uc815:<ul> <li>TAG_VERSION(\uc77c\ubc18 \ud14d\uc2a4\ud2b8): <code>latest</code> , \uc704\uc5d0\uc11c TAG_VERSION\uc744 commit hash\ub85c \ubc1b\ub294 \uc124\uc815\uc744 \ud558\uc600\uc744 \uacbd\uc6b0\ub294 \uc124\uc815 \ud544\uc694 \uc5c6\uc74c</li> <li>IMAGE_REPO_NAME(\uc77c\ubc18 \ud14d\uc2a4\ud2b8): <code>Docker Repo Name</code> e.g., cloudacode/devops-flask</li> <li>DOCKERHUB_USER(Secrets Manager): <code>dockerhub:username</code></li> <li>DOCKERHUB_PW(Secrets Manager): <code>dockerhub:password</code> </li> </ul> <p>Note</p> <p>username, password \ubcf4\uc548\uc744 \uc704\ud574 Secrets Manager\ub97c \ud65c\uc6a9\ud558\uc5ec \uc554\ud638 \uad00\ub9ac \ud544\uc694. \ucc38\uace0</p> </li> </ul> </li> <li>BuildSpec<ul> <li>\uc0c1\uc704 \ub514\ub809\ud1a0\ub9ac\uc5d0 buildspec.yml\uc774\ub77c\ub294 \ud30c\uc77c\ub85c \uc774\ub984\uc744 \uc815\ud588\uc73c\ubbc0\ub85c \ubcc4\ub3c4\uc758 \uc785\ub825\uac12 \ud544\uc694 \uc5c6\uc74c</li> </ul> </li> <li>Artifact: \uc5c6\uc74c</li> <li>CloudWatch: Default(CloudWatch \ub85c\uadf8 \uc120\ud0dd)</li> </ol>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#2-configure-secrets-manager","title":"2. Configure Secrets Manager","text":"<p>Go to SecretsManager console</p> <p>Store a new secret</p> <ul> <li>Type: Other type of Secrets</li> <li>Secret key/vale\uc5d0 username: <code>DOCKERHUB \uacc4\uc815\uc774\ub984</code>, password: <code>DOCKERHUB \uacc4\uc815\ud328\uc2a4\uc6cc\ub4dc</code> \uc785\ub825</li> <li>Secret Name: <code>dockerhub</code> </li> </ul> <p>\ucc38\uace0: DockerHub \uc790\uaca9 \uc99d\uba85\uc800\uc7a5</p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#3-configure-iam-policy","title":"3. Configure IAM policy","text":"<p>SecretManager\uc5d0\uc11c \uc815\uc758\ud55c dockerhub secret\ub3c4 \uc77d\ub294 \uad8c\ud55c\uc744 \ubd80\uc5ec \ud558\uae30 \uc704\ud574 <code>CodeBuildSecretsManagerPolicy-&lt;YOUR_BUILD_PROJECT_NAME&gt;-ap-northeast-2</code>\uc758 Resource\uc5d0 secretsmanager dockerhub ARN \ucd94\uac00</p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#confirm-the-dockerhub-secrets-arn","title":"Confirm the dockerhub secrets ARN","text":"<p>Go to Secertmanager dockerhub ARN</p> <p></p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#add-the-dockerhub-secrets-resource-in-iam-policy","title":"Add the dockerhub secrets resource in IAM Policy","text":"<p>Go to IAM Policy console</p> <p><code>CodeBuildSecretsManagerPolicy-&lt;YOUR_BUILD_PROJECT_NAME&gt;-ap-northeast-2</code> \uc5d0\uc11c \uc218\uc815 \uc9c4\ud589(JSON\uc5d0\uc11c Resource\uc758 \ub9c8\uc9c0\ub9c9 \uc904\uc5d0 \ucd94\uac00)</p> <p></p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#4-verify-codebuild-job-manually","title":"4. Verify Codebuild Job manually","text":"<p>\uc218\ub3d9\uc73c\ub85c \uc218\ud589 \ubc0f Codebuild \ucf58\uc194\uc5d0\uc11c \ud655\uc778</p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#dockerhub-image","title":"DockerHub image","text":"<p>\uc774\ubbf8\uc9c0\uac00 \uc815\uc0c1\uc801\uc73c\ub85c DockerHub\uc5d0 \uc5c5\ub85c\ub4dc \ub418\uc5c8\ub294\uc9c0 \ud655\uc778</p>"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#pull-request","title":"Pull Request \ud14c\uc2a4\ud2b8","text":"<p>\ubcc4\ub3c4\uc758 Branch\ub97c \ub9cc\ub4e4\uc5b4 static/css/main.css\uc758 backgroud-color \uc218\uc815 \ud6c4 main\uc73c\ub85c PR \uc218\ud589 \ubc0f CI \ub3c4\uad6c\uac00 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc778\uc9c0\ud558\uc5ec \uc790\ub3d9\uc73c\ub85c \uc218\ud589 \ub418\ub294\uc9c0 \ud655\uc778</p> <p></p> <p>\ud83c\udf89 Congratulations, you have completed Publishing Docker images - AWS CodeBuild tutorial</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"devops/cicd/github-aws-codebuild-dockerhub/#_1","title":"\ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>https://docs.aws.amazon.com/ko_kr/whitepapers/latest/introduction-devops-aws/introduction-devops-aws.pdf</li> <li>https://docs.aws.amazon.com/ko_kr/whitepapers/latest/practicing-continuous-integration-continuous-delivery/practicing-continuous-integration-continuous-delivery.pdf</li> <li>https://docs.aws.amazon.com/ko_kr/codebuild/latest/userguide/sample-docker.html</li> <li>https://docs.aws.amazon.com/ko_kr/codebuild/latest/userguide/github-webhook.html</li> </ul>"},{"location":"kubernetes/argocd-deployment/","title":"Implement an ArgoCD, Deploy Monitoring Pipeline","text":"<p>Kuberentes\uc5d0 ArgoCD \uc5f0\ub3d9 \ubc0f Grafana, Prometheus\ub85c \ubaa8\ub2c8\ud130\ub9c1 \ud30c\uc774\ud504\ub77c\uc778 \uad6c\uc131</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 \ucfe0\ubc84\ub124\ud2f1\uc2a4\uc5d0 ArgoCD\ub97c \uc5f0\ub3d9\ud558\uc5ec \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc30\ud3ec \ud574\ubcf4\uace0 \ubaa8\ub2c8\ud130\ub9c1 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uad6c\uc131 \ud574\ubcf4\ub294 \uc2e4\uc2b5 \uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f1\uc2a4\uc5d0 \uc11c\ube44\uc2a4\uc758 \ubc30\ud3ec \uad00\ub9ac\ub97c \ud560\uc218 \uc788\ub294 \ub3c4\uad6c\uc778 ArgoCD\uc5d0 \ub300\ud55c \ud2b9\uc131\uacfc \uc2e4\uc81c \ubaa8\ub2c8\ud130\ub9c1 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uad6c\uc131\ud574 \ubcf4\uba74\uc11c \ubaa8\ub2c8\ud130\ub9c1 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"kubernetes/argocd-deployment/#_1","title":"\uc0ac\uc804 \uc900\ube44 \uc0ac\ud56d","text":""},{"location":"kubernetes/argocd-deployment/#aws-eks","title":"AWS EKS \uad6c\uc131","text":"<p>Amazon EKS \uad6c\uc131: \uad00\ub828 \ub9c1\ud06c</p>"},{"location":"kubernetes/argocd-deployment/#architecture","title":"Architecture","text":"Star"},{"location":"kubernetes/argocd-deployment/#argocd","title":"ArgoCD \uc5f0\ub3d9","text":""},{"location":"kubernetes/argocd-deployment/#argocd_1","title":"ArgoCD \uc124\uce58","text":"<p>https://argoproj.github.io/argo-cd/getting_started/</p> <pre><code>kubectl create namespace argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n</code></pre> <p>This will create a new namespace, <code>argocd</code>, where Argo CD services and application resources will live.</p>"},{"location":"kubernetes/argocd-deployment/#argocd-cli","title":"(\uc635\uc158) ArgoCD CLI \uc124\uce58","text":"<p>Download the latest Argo CD version from https://github.com/argoproj/argo-cd/releases/latest. </p> <p>More detailed installation instructions can be found via the CLI installation documentation.</p>"},{"location":"kubernetes/argocd-deployment/#argocd-server","title":"ArgoCD Server \uc811\uc18d","text":"<p>In order to access server via URL, need to expose the Argo CD API server. Change the argocd-server service type to <code>LoadBalancer</code>:</p> <pre><code>kubectl patch svc argocd-server -n argocd -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'\n</code></pre> <p>LB Endpoint\ub97c \ub178\ucd9c \ud558\ub354\ub77c\ub3c4 \ub3c4\uba54\uc778 \ub4f1\ub85d \uc2dc\uac04\uc774 \uc18c\uc694 \ub418\ubbc0\ub85c \ube0c\ub77c\uc6b0\uc800\ub97c \ud1b5\ud55c \uc811\uadfc\uc774 \uac00\ub2a5\ud558\uae30 \uae4c\uc9c0\ub294 \uc57d 5\ubd84 \uc18c\uc694</p> <p>Check the LB Endpoint</p> <pre><code>kubectl get -n argocd svc argocd-server    \nNAME            TYPE           CLUSTER-IP       EXTERNAL-IP                                                                    PORT(S)                      AGE\nargocd-server   LoadBalancer   10.100.143.242   a1521dde2ec114a4eb7fb04632cab058-1608723687.ap-northeast-2.elb.amazonaws.com   80:32511/TCP,443:31088/TCP   17m\n</code></pre> <p>Also available to get the external LB endpoint as a raw value:</p> <pre><code>kubectl get -n argocd svc argocd-server --output jsonpath='{.status.loadBalancer.ingress[0].hostname}'\n</code></pre> <p>\ucd08\uae30 <code>admin</code> \ud328\uc2a4\uc6cc\ub4dc \ud655\uc778 </p> <pre><code>kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n</code></pre> <p>https://argoproj.github.io/argo-cd/getting_started/#4-login-using-the-cli</p> <p>\ube0c\ub77c\uc6b0\uc800\ub97c \ud1b5\ud574 LB Endpoint \uc5d0 \uc811\uc18d</p> <p>Note</p> <p>SSL\uc778\uc99d\uc11c \uc5f0\ub3d9\uc744 \ud558\uc9c0 \uc54a\uc544 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc0ac\uc774\ud2b8\uac00 \uc548\uc804\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uba54\uc2dc\uc9c0\uac00 \ubc1c\uc0dd\ud558\uae30 \ub54c\ubb38\uc5d0 \uc2e4\uc2b5 \ub54c\ub294 \ubb34\uc2dc\ud558\uace0 \uc9c4\ud589\ud55c\ub2e4.</p> <p></p>"},{"location":"kubernetes/argocd-deployment/#argocd-appprometheus-grafana","title":"ArgoCD\ub97c \ud1b5\ud574 \ubaa8\ub2c8\ud130\ub9c1 App(Prometheus, Grafana) \ubc30\ud3ec","text":"<p>\uc6f9 \ucf58\uc194\uc5d0 \uc811\uc18d\ud6c4 + New App \ud074\ub9ad\ud558\uc5ec \uc2e0\uaddc \uc560\ud50c\ub9ac\ucf00\uc774\uc158(Prometheus) \uc0dd\uc131</p> <ul> <li>GENERAL</li> <li>Application Name: prometheus</li> <li>Project: default</li> <li>Sync Policy: Manual</li> <li>SOURCE</li> <li>Repo URL: https://prometheus-community.github.io/helm-charts <code>HELM</code></li> <li>Chart: prometheus <code>15.1.1</code></li> <li>DESTINATION</li> <li>Cluster URL: https://kubernetes.default.svc</li> <li>Namespace: default</li> </ul> <p>Create \uc9c4\ud589 \ud6c4</p> <p>\ud654\uba74\uc744 \uc0c8\ub85c\uace0\uce68 \ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc571\uc774 \ud558\ub098 \ub4f1\ub85d \ub418\uc5b4 Sync\uac00 \uc544\uc9c1 \ub418\uc9c0 \uc54a\uc740 OutOfSync \uc0c1\ud0dc\ub85c \ud655\uc778 \ub41c\ub2e4. Sync \uc815\ucc45\uc744 Manual \ub85c \ud558\uc600\uae30 \ub54c\ubb38\uc5d0 \ucd08\uae30\uc5d0 OutOfSync \uc0c1\ud0dc\ub294 \uc815\uc0c1 \uc774\ub2e4.</p> <p>SYNC \uc218\ud589 \ud6c4</p> <p>\ub808\ud3ec\uc9c0\ud1a0\ub9ac URL \uc774 \uc62c\ubc14\ub974\uac8c \ub418\uc5b4 \uc788\ub2e4\uba74 \ubb38\uc81c \uc5c6\uc774 sync\uac00 \uc644\ub8cc\ub418\uace0 \uc0c1\uc138 \ud398\uc774\uc9c0 \uc5ed\uc2dc \uc544\ub798\ucc98\ub7fc \ud655\uc778 \uac00\ub2a5\ud558\ub2e4   </p> <p>Prometheus\uc758 ClusterIP \ud655\uc778</p> <pre><code>kubectl get svc prometheus-server\nNAME                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE\nprometheus-server   ClusterIP   10.100.238.196   &lt;none&gt;        80/TCP    5m44s\n</code></pre> <p>\ub2e4\uc2dc \uc6f9 \ucf58\uc194\uc5d0\uc11c + New App \ud074\ub9ad\ud558\uc5ec \uc2e0\uaddc \uc560\ud50c\ub9ac\ucf00\uc774\uc158(Grafana) \uc0dd\uc131</p> <ul> <li>GENERAL</li> <li>Application Name: grafana</li> <li>Project: default</li> <li>Sync Policy: Manual</li> <li>SOURCE</li> <li>Repo URL: https://grafana.github.io/helm-charts <code>HELM</code></li> <li>Chart: prometheus <code>6.21.1</code></li> <li>DESTINATION</li> <li>Cluster URL: https://kubernetes.default.svc</li> <li>Namespace: default</li> </ul> <p>\uc544\ub798 HELM \ubcc0\uc218\uac12 \ud0ed\uc5d0\uc11c <code>service.type</code> \uac80\uc0c9 \ud6c4 \uac12\uc744 <code>LoadBalancer</code> \ub85c \ubcc0\uacbd </p> <p>Create \uc640 SYNC \uc218\ud589 \ud6c4 \uc815\uc0c1\uc801\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74 admin password\ub97c \uc870\ud68c</p> <pre><code>kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n</code></pre> <p>Endpoint \ud655\uc778\uc744 \uc704\ud574 ArgoCD \ud654\uba74\uc5d0\uc11c Grafana \uc120\ud0dd \ud6c4 \uc0c1\uc138\ud398\uc774\uc9c0 Service(\ud654\uba74\uc5d0\uc11c\ub294 svc grafana)\uc758 Hostnames \ud56d\ubaa9\uc5d0 \uc571\uc5d0 \uc811\uc18d \uac00\ub2a5\ud55c LB URL\uc774 \uc0dd\uc131 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778 \ud6c4 \uc6f9 \ube0c\ub77c\uc6b0\uc838\ub97c \ud1b5\ud574 \ud574\ub2f9 URL\ub85c \uc811\uc18d\ud558\uc5ec Grafana\uc5d0 \uc811\uadfc </p>"},{"location":"kubernetes/argocd-deployment/#monitoring-dashboard","title":"Monitoring Dashboard \uad6c\uc131","text":"<p>\uc67c\ucabd \ud15d Configuration \uc5d0\uc11c Data Sources \uc120\ud0dd \ud6c4 \uc704\uc5d0\uc11c \uc870\ud68c\ud55c Prometheus Cluster IP\ub97c HTTP URL\ub85c \uc9c0\uc815  SAVE &amp; TEST \ud558\uc5ec Data Source \ub4f1\ub85d</p> <p>\uc67c\ucabd \ud15d + Import -&gt; Upload Json File: k8s-metric-dashboard_rev1.json \uc5c5\ub85c\ub4dc</p> <p>Options   - prometheus: <code>Promethesus</code></p> <p>\uc544\ub798\ucc98\ub7fc \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ubaa8\ub2c8\ud130\ub9c1 \ub300\uc26c\ubcf4\ub4dc \ud655\uc778 </p>"},{"location":"kubernetes/argocd-deployment/#clean-up","title":"Clean Up","text":"<p>\uc2e4\uc2b5 \uc644\ub8cc \ud6c4 \ube44\uc6a9 \uc808\uc57d\uc744 \uc704\ud574 \uc2e4\uc2b5\ud55c EKS \ub9ac\uc18c\uc2a4\ub97c \uc815\ub9ac</p> <pre><code>eksctl delete cluster --region=ap-northeast-2 --name=&lt;your eks cluster name&gt;\n</code></pre>"},{"location":"kubernetes/argocd-deployment/#reference","title":"Reference","text":"<p>https://argoproj.github.io/argo-cd/getting_started</p> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"kubernetes/minikube-todo-app/","title":"Deploy Todo App locally via Minikube","text":"<p>Minikube\ub97c \ud65c\uc6a9\ud558\uc5ec \ub85c\uceec\ud658\uacbd\uc5d0 Todo App \ubc30\ud3ec</p> <p>\uc774\ubc88 \uc2e4\uc2b5\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 Python flask \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uacfc mariaDB\ub97c \ubc30\ud3ec \ud574\ubcf4\uace0 \uc811\uadfc \ud574\ubcf4\ub294 \uc2e4\uc2b5 \uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 DB\uc6a9 \uc601\uad6c\ubcfc\ub968(PersistentVolume)\uad6c\uc131 \ubc29\ubc95 \ubc0f \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \ubc29\ubc95\uacfc \uc11c\ube44\uc2a4 \ub178\ucd9c \ubc29\ubc95\uc5d0 \ub300\ud574 \uc774\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"kubernetes/minikube-todo-app/#_1","title":"\uc0ac\uc804 \uc900\ube44 \uc0ac\ud56d","text":""},{"location":"kubernetes/minikube-todo-app/#minikube","title":"Minikube \uad6c\uc131","text":"<p>Minikube \uad6c\uc131: \uad00\ub828 \ub9c1\ud06c</p>"},{"location":"kubernetes/minikube-todo-app/#architecture","title":"Architecture","text":"Star"},{"location":"kubernetes/minikube-todo-app/#minikube-application","title":"Minikube\uc5d0 Application \ubc30\ud3ec","text":""},{"location":"kubernetes/minikube-todo-app/#minikube_1","title":"Minikube \uc2e4\ud589","text":"<p>Run <code>minikube start</code> to start minikube locally</p>"},{"location":"kubernetes/minikube-todo-app/#todo-data-volume","title":"Todo Data Volume \uc0dd\uc131","text":"<p>Run <code>kubectl apply -f todo-mariadb-pv.yaml</code> to create persistent data volume for the mariadb.</p> <p>todo-mariadb-pv.yaml</p> <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: task-data-volume\n  labels:\n    classname: mini\nspec:\n  storageClassName: mini\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 1Gi\n  hostPath:\n    path: /data/task-data/\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: task-data-claim\n  labels:\n    classname: mini\nspec:\n  storageClassName: mini\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 500Mi\n</code></pre> <p>Run <code>kubectl get pv,pvc -l classname=mini</code> to verify the pv and pvc are created properly</p> <pre><code>$ kubectl get pv,pvc -l classname=mini\nNAME                                CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                     STORAGECLASS   REASON   AGE\npersistentvolume/task-data-volume   1Gi        RWO            Retain           Bound    default/task-data-claim   mini                    11s\n\nNAME                                    STATUS   VOLUME             CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npersistentvolumeclaim/task-data-claim   Bound    task-data-volume   1Gi        RWO            mini           11s\n</code></pre>"},{"location":"kubernetes/minikube-todo-app/#todo-app-mariadb","title":"Todo App\uc6a9 Mariadb \ubc30\ud3ec","text":"<p>Source code: cloudacode/coolstuff/todo-mariadb</p> <p>Run <code>kubectl apply -f todo-mariadb-app.yaml</code> to deploy mariadb and service endpoint</p> <p>todo-mariadb-app.yaml</p> <pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n      - image: cloudacode/mariadb-todo:v1.0.1\n        name: mysql\n        ports:\n        - containerPort: 3306\n          name: mysql\n        volumeMounts:\n        - name: task-data-storage\n          mountPath: /var/lib/mysql\n      volumes:\n      - name: task-data-storage\n        persistentVolumeClaim:\n          claimName: task-data-claim\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\nspec:\n  ports:\n  - port: 3306\n  selector:\n    app: mysql\n  clusterIP: None\n</code></pre>"},{"location":"kubernetes/minikube-todo-app/#todo-app-flask","title":"Todo App\uc6a9 Flask \ubc30\ud3ec","text":"<p>Source code: cloudacode/coolstuff/todo-flask-app</p> <p>Run <code>kubectl apply -f todo-flask-app.yaml</code> to deploy flask app and service endpoint</p> <p>todo-flask-app.yaml</p> <pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: todo-app\n  labels:\n    app: todo-app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: todo-app\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: todo-app\n    spec:\n      containers:\n      - image: cloudacode/python-todo:v1.1.0\n        imagePullPolicy: Always\n        name: todo-app\n        ports:\n        - containerPort: 5000\n          protocol: TCP\n        env:\n        - name: DB_USER\n          value: root\n        - name: DB_PASSWORD\n          value: mysecret\n        - name: DB_NAME\n          value: todo\n        - name: DB_HOST\n          value: mysql\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: todo-app-svc\nspec:\n  selector:\n    app: todo-app\n  ports:\n   -  protocol: TCP\n      port: 80\n      targetPort: 5000\n  type: LoadBalancer\n</code></pre> <p>Run <code>kubectl get svc</code> in check the exposed service. you may see the <code>EXTERNAL-IP</code> is <code>pending</code> status due to minikube doesn't have extra LB. </p> <pre><code>kubectl get svc todo-app-svc\nNAME           TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE\ntodo-app-svc   LoadBalancer   10.102.161.248   &lt;pending&gt;     80:31289/TCP   54s\n</code></pre> <p>You should use the <code>minikube tunnel</code> to get the external-ip for the service. Loadbalancer Access</p>"},{"location":"kubernetes/minikube-todo-app/#minikube-tunnel","title":"Minikube tunnel \uc124\uc815","text":"<p>Run <code>minikube tunnel</code> in a seperate terminal to enable external-ip</p> <pre><code>minikube tunnel\n\u2757  The service todo-app-svc requires privileged ports to be exposed: [80]\n\ud83d\udd11  sudo permission will be asked for it.\n\ud83c\udfc3  Starting tunnel for service todo-app-svc.\nPassword:\n\n</code></pre> <p>Run <code>kubectl get svc todo-app-svc</code> in check the external-ip and it will be </p> <pre><code>kubectl get svc todo-app-svc\nNAME           TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE\ntodo-app-svc   LoadBalancer   10.102.161.248   127.0.0.1     80:31289/TCP   5m41s\n</code></pre>"},{"location":"kubernetes/minikube-todo-app/#todo-app","title":"Todo App \uc811\uadfc","text":"<p>Open <code>http://127.0.0.1</code> in your favorite web browser and check the flask todo app</p> <p></p>"},{"location":"kubernetes/minikube-todo-app/#todo-mariadb-pod","title":"Todo MariaDB Pod \uc0ad\uc81c \ubc0f \uc7ac\ubc30\ud3ec","text":"<p>\uc704\uc5d0\uc11c \uc138\ud305\ud55c Persistent Volume\uc774 Pod\uc758 \ub0b4\ubd80 \ubcfc\ub968\uc774 \uc544\ub2cc \uc678\ubd80 \uc2a4\ud1a0\ub9ac\uc9c0 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uac80\uc99d \ud558\uae30 \uc704\ud574 pod\ub97c \uc0ad\uc81c</p> <p>Run <code>kubectl delete pods -l app=todo-db</code> to delete the pod resource. Deployment resource will monitor the pod status and will spawn the pod immediately</p> <pre><code>$ kubectl get pods -l app=todo-db\nNAME                       READY   STATUS    RESTARTS   AGE\ntodo-db-65848c57db-hwqnp   1/1     Running   0          17s\n</code></pre> <p>A new todo-db pod is up and mounted node's <code>/data/task-data/</code> to <code>/var/lib/mysql/</code> volume on the pod. This means that DB data volume is managed in an external volume space.</p> <p>\ud655\uc778\uc744 \uc704\ud574 open <code>http://127.0.0.1</code> and make sure the todo data exists.</p>"},{"location":"kubernetes/minikube-todo-app/#todo-app_1","title":"Todo App \ub9ac\uc18c\uc2a4 \ud655\uc7a5","text":"<p>Run <code>kubectl scale --replicas=3 deployment/todo-app</code> to scale out the app</p> <pre><code>$ kubectl scale --replicas=3 deployment/todo-app\ndeployment.apps/todo-app scaled\n$ kubectl get pods\nNAME                        READY   STATUS              RESTARTS   AGE\nmysql-8bb5f69f8-cs55w       1/1     Running             0          10m\ntodo-app-576d68cf7f-cf74w   1/1     Running             0          5s\ntodo-app-576d68cf7f-mskbm   1/1     Running             0          7m16s\ntodo-app-576d68cf7f-w8x8q   0/1     ContainerCreating   0          5s\n</code></pre>"},{"location":"kubernetes/minikube-todo-app/#clean-up","title":"Clean Up","text":"<p>\ubc30\ud3ec\ud55c \ub9ac\uc18c\uc2a4(deployments, service) \uc815\ub9ac</p> <pre><code>$ kubectl delete -f todo-flask-app.yaml\n$ kubectl delete -f todo-mariadb-app.yaml\n</code></pre> <p>\uc774 \uae00\uc774 \uc720\uc6a9\ud558\uc600\ub2e4\uba74 \u2b50 Star\ub97c, \ud83d\udcac 1:1 \uc9c8\ubb38\uc774\ub098 \uae30\uc220 \uad00\ub828 \ubb38\uc758\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\ub4e4\uc740 \ud074\ub77c\uc6b0\ub4dc\uc5b4\ucf54\ub4dc \uce74\uce74\uc624\ud1a1 \ucc44\ub110 \ucd94\uac00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\ud83e\udd17</p> Star"},{"location":"python/flask/simple-flask-app-mariadb/","title":"A Simple REST Flask APP with MariaDB Container","text":"<p>In this tutorial, you will learn how to build a Flask web application and implement the app with database(MariaDB). using postman to test basic REST APIs(HTTP methods: GET, POST, DELETE).</p> <p>Flask\ub85c Web App\uc744 \uac1c\ubc1c\uc744 \ud558\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc640 \uc5f0\ub3d9\uc744 \ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf8\ub2e4. CURL\uc744 \uc0ac\uc6a9 \ud558\uc5ec \uae30\ubcf8\uc801\uc778 REST API(HTTP methods: GET, POST, DELETE)\ub97c \ud14c\uc2a4\ud2b8 \ud574\ubcf8\ub2e4.</p> <p>Time to Complete: 1-2 hours</p> <p>Tutorial Prereqs:</p> <ul> <li>Download stable POSTMAN</li> <li>Python 3.x</li> <li> <p>Python Library requirement.txt</p> <pre><code>flask\npymysql\nflask_table\nflask-mysql\n</code></pre> </li> <li> <p>Download stable Docker</p> </li> </ul>"},{"location":"python/flask/simple-flask-app-mariadb/#architecture","title":"Architecture","text":""},{"location":"python/flask/simple-flask-app-mariadb/#1-create-a-container-test-network","title":"1. Create a container test network","text":"<pre><code>docker network create test-net\n</code></pre> <p><code>test-net</code> is newly created docker network for this tutorial (other than bridge as the default network)</p>"},{"location":"python/flask/simple-flask-app-mariadb/#2-provision-a-db-container","title":"2. Provision a DB container","text":""},{"location":"python/flask/simple-flask-app-mariadb/#start-predefined-mariadb-container","title":"Start predefined mariadb container","text":"<pre><code>docker run -p 3306:3306 --name my-mariadb --net test-net -d cloudacode/simple-mariadb:latest\n</code></pre> <p>dockerfile of the cloudacode/mariadb: simple-mariadb-container</p> <p>Note</p> <p>If you want to setup the database by yourself, please follow below guideline.</p>"},{"location":"python/flask/simple-flask-app-mariadb/#optional-start-a-mariadb-instance-from-scratch","title":"(Optional) Start a mariadb instance from scratch","text":""},{"location":"python/flask/simple-flask-app-mariadb/#deploy-new-mariadb-container","title":"Deploy new MariaDB container","text":"<pre><code>docker run -p 3306:3306 --name my-mariadb --net test-net \\\n -e MYSQL_ROOT_PASSWORD=mysecret -e MYSQL_DATABASE=cloud_user \\\n -d mariadb:latest\n</code></pre> <p>Note</p> <p>mariadb official repo: https://hub.docker.com/_/mariadb</p>"},{"location":"python/flask/simple-flask-app-mariadb/#initalize-the-database","title":"Initalize the database","text":"<p>connect to db container and database</p> <pre><code>docker exec -it my-mariadb /bin/bash\n</code></pre> <p>If you can see <code>root@b51599196adf:/#</code> in your terminal, it means you are in the container.</p> <p>login the database via mysql client and initialize the database</p> <pre><code>mysql -uroot -pmysecret\n</code></pre> <pre><code>MariaDB [(none)]&gt; use cloud_user;\nDatabase changed\nMariaDB [cloud_user]&gt;\nMariaDB [cloud_user]&gt; CREATE TABLE IF NOT EXISTS `cloud_user` (\n    `user_id` bigint NOT NULL AUTO_INCREMENT,\n    `user_name` varchar(45) DEFAULT NULL,\n    `user_email` varchar(45) DEFAULT NULL,\n    `user_bio` varchar(255) DEFAULT NULL,\n    PRIMARY KEY (`user_id`)\n    ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ;\n\nQuery OK, 0 rows affected, 1 warning (0.001 sec)\n\nMariaDB [cloud_user]&gt; select * from cloud_user;\nEmpty set (0.001 sec)\n\nMariaDB [cloud_user]&gt; INSERT INTO `cloud_user` (\n    `user_id`,`user_name`,`user_email`, `user_bio`)\n    values\n    (1,'kc chang','cloudacode@gmail.com', 'mento');\n\nQuery OK, 1 row affected (0.001 sec)\n\nMariaDB [cloud_user]&gt;\nMariaDB [cloud_user]&gt; select * from cloud_user;\n+---------+-----------+----------------------+----------+\n| user_id | user_name | user_email           | user_bio |\n+---------+-----------+----------------------+----------+\n|       1 | kc chang  | cloudacode@gmail.com | mento    |\n+---------+-----------+----------------------+----------+\n1 row in set (0.000 sec)\n\n</code></pre>"},{"location":"python/flask/simple-flask-app-mariadb/#3-build-the-flask-app","title":"3. Build the Flask app","text":"<p>to run the flask app in your local environment, you should build the flask app first.</p> <p>source code: cloudacode/coolstuff.git</p> <pre><code>git clone https://github.com/cloudacode/coolstuff.git\ncd flask-example/simple-flask-app\ndocker build -t cloudacode/simple-flask-app:latest .\n</code></pre> <p>Note</p> <p>you can change the <code>cloudacode</code> to your dockerhub repo name</p>"},{"location":"python/flask/simple-flask-app-mariadb/#4-run-the-flask-app","title":"4. Run the Flask app","text":"<p>Run the flask app on your localhost or dev machine</p> <pre><code>docker run -p 8888:5000 --net test-net \\\n -e DB_USER=root -e DB_PASSWORD=mysecret -e DB_NAME=cloud_user -e DB_HOST=simple-mariadb \\\n cloudacode/simple-flask-app:latest\n</code></pre> <p>OR</p> <pre><code>docker run -p 8888:5000 --net test-net \\\n --env-file ./env.list cloudacode/simple-flask-app:latest\n</code></pre> <p>Note</p> <p>If you are using your own password or database name, you need to replace the vaule in the <code>env.list</code> file</p>"},{"location":"python/flask/simple-flask-app-mariadb/#5-test-api-request","title":"5. Test API request","text":"<p>get date from the server. you can also use the web browser to get the date</p> <pre><code>curl localhost:8888/user\n</code></pre> <p>review the output. here is the expected output message</p> <pre><code>[\n  {\n    \"user_bio\": \"mento\",\n    \"user_email\": \"cloudacode@gmail.com\",\n    \"user_id\": 1,\n    \"user_name\": \"kc chang\"\n  }\n]\n</code></pre> <p>post Json data to the server</p> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"bio\": \"test user\", \"email\": \"test1@cloudacode.com\", \"name\": \"test1\"}' \\\nhttp://localhost:8888/add\n</code></pre> <p>get the user list again from the server</p> <pre><code>curl localhost:8888/user\n</code></pre>"},{"location":"python/flask/simple-flask-app-mariadb/#6-docker-compose","title":"6. Docker Compose","text":"<p>Install Docker Compose: link</p> <pre><code>version: \"2\"\nservices:\n  simple-mariadb:\n    image: cloudacode/simple-mariadb:latest\n    ports:\n      - \"3306:3306\"\n  simple-flask-app:\n    links:\n      - simple-mariadb\n    image: cloudacode/simple-flask-app:latest\n    ports:\n      - \"8888:5000\"\n    environment:\n      - DB_USER=root\n      - DB_PASSWORD=mysecret\n      - DB_NAME=cloud_user\n      - DB_HOST=simple-mariadb\n</code></pre> <p>docker-compose.yaml</p> <p>Run docker compose to up all containers</p> <pre><code>docker-compose up -d\n</code></pre> <p>\ud83c\udf89 Congratulations, you have completed Flask, MariaDB integration tutorial</p>"}]}